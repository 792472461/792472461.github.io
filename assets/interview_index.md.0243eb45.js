import{_ as n,c as s,o as a,a as t}from"./app.5d16524a.js";const y='{"title":"\u524D\u7AEF\u9762\u8BD5\u6C47\u603B","description":"","frontmatter":{},"headers":[{"level":2,"title":"CSS\u76F8\u5173","slug":"css\u76F8\u5173"},{"level":3,"title":"flex","slug":"flex"},{"level":3,"title":"BFC","slug":"bfc"},{"level":2,"title":"JavaScript\u76F8\u5173","slug":"javascript\u76F8\u5173"},{"level":3,"title":"script\u6807\u7B7E\u5C5E\u6027","slug":"script\u6807\u7B7E\u5C5E\u6027"},{"level":3,"title":"var,let,const\u533A\u522B","slug":"var-let-const\u533A\u522B"},{"level":3,"title":"JS\u521B\u5EFA\u5BF9\u8C61\u7684\u65B9\u5F0F","slug":"js\u521B\u5EFA\u5BF9\u8C61\u7684\u65B9\u5F0F"},{"level":3,"title":"new Function\u8FC7\u7A0B","slug":"new-function\u8FC7\u7A0B"},{"level":3,"title":"\u7EE7\u627F","slug":"\u7EE7\u627F"},{"level":3,"title":"\u7BAD\u5934\u51FD\u6570\u4EC0\u4E48\u65F6\u5019\u4E0D\u80FD\u4F7F\u7528","slug":"\u7BAD\u5934\u51FD\u6570\u4EC0\u4E48\u65F6\u5019\u4E0D\u80FD\u4F7F\u7528"},{"level":3,"title":"\u6DF1\u62F7\u8D1D","slug":"\u6DF1\u62F7\u8D1D"},{"level":3,"title":"call, apply, bin","slug":"call-apply-bin"},{"level":3,"title":"\u6D4F\u89C8\u5668\u4E2D\u7684\u8FDB\u7A0B","slug":"\u6D4F\u89C8\u5668\u4E2D\u7684\u8FDB\u7A0B"},{"level":3,"title":"\u6E32\u67D3\u8FDB\u7A0B\uFF08\u5305\u542B\u7740\u591A\u4E2A\u7EBF\u7A0B\uFF09","slug":"\u6E32\u67D3\u8FDB\u7A0B\uFF08\u5305\u542B\u7740\u591A\u4E2A\u7EBF\u7A0B\uFF09"},{"level":3,"title":"\u5B8F\u4EFB\u52A1|\u5FAE\u4EFB\u52A1","slug":"\u5B8F\u4EFB\u52A1-\u5FAE\u4EFB\u52A1"},{"level":3,"title":"\u5229\u7528swc\u6216\u8005esbuild\u63D0\u5347webpack\u6784\u5EFA\u901F\u5EA6","slug":"\u5229\u7528swc\u6216\u8005esbuild\u63D0\u5347webpack\u6784\u5EFA\u901F\u5EA6"},{"level":2,"title":"\u8FDB\u9636\u9898","slug":"\u8FDB\u9636\u9898"},{"level":3,"title":"\u624B\u5199\u6DF1\u5408\u5E76","slug":"\u624B\u5199\u6DF1\u5408\u5E76"},{"level":3,"title":"Promise.finally\u539F\u7406","slug":"promise-finally\u539F\u7406"},{"level":3,"title":"Promise.race\u539F\u7406","slug":"promise-race\u539F\u7406"},{"level":3,"title":"promisify\u539F\u7406","slug":"promisify\u539F\u7406"},{"level":3,"title":"\u624B\u5199Promise\u51FD\u6570","slug":"\u624B\u5199promise\u51FD\u6570"},{"level":2,"title":"\u597D\u6587","slug":"\u597D\u6587"},{"level":2,"title":"Node\u76F8\u5173","slug":"node\u76F8\u5173"}],"relativePath":"interview/index.md","lastUpdated":1652381426759}',p={},o=t(`<h1 id="\u524D\u7AEF\u9762\u8BD5\u6C47\u603B" tabindex="-1">\u524D\u7AEF\u9762\u8BD5\u6C47\u603B <a class="header-anchor" href="#\u524D\u7AEF\u9762\u8BD5\u6C47\u603B" aria-hidden="true">#</a></h1><h2 id="css\u76F8\u5173" tabindex="-1">CSS\u76F8\u5173 <a class="header-anchor" href="#css\u76F8\u5173" aria-hidden="true">#</a></h2><h3 id="flex" tabindex="-1">flex <a class="header-anchor" href="#flex" aria-hidden="true">#</a></h3><ol><li>flex-direction: \u5C5E\u6027\u51B3\u5B9A\u4E3B\u8F74\u7684\u65B9\u5411\uFF1B <ol><li>row \u6C34\u5E73\u65B9\u5411\uFF0C\u8D77\u70B9\u5728\u5DE6\u7AEF</li><li>row-reverse \u6C34\u5E73\u65B9\u5411\uFF0C\u8D77\u70B9\u53F3\u7AEF</li><li>column \u7EB5\u5411\u65B9\u5411\uFF0C\u8D77\u70B9\u5728\u4E0A</li><li>column \u7EB5\u5411\u65B9\u5411\uFF0C\u8D77\u70B9\u5728\u4E0B</li></ol></li><li>flex-wrap:\u51B3\u5B9A\u662F\u5426\u6362\u884C\uFF0C\u9ED8\u8BA4\u90FD\u662F\u6392\u5728\u4E00\u884C <ol><li>no-wrap;(\u9ED8\u8BA4)\u4E0D\u6362\u884C</li><li>wrap; //\u6362\u884C\uFF0C\u7B2C\u4E00\u884C\u5728\u4E0A\u65B9</li><li>wrap-reverse;//\u6362\u884C\uFF1B\u7B2C\u4E8C\u884C\u5728\u4E0A\u65B9</li></ol></li><li>flex-flow:flex-direction\u548Cflex-wrap\u7684\u7F29\u5199\uFF0C\u9ED8\u8BA4\u4E3Arow nowrap</li><li>justify-content:\u5B9A\u4E49\u5728item\u5728\u4E3B\u8F74\u4E0A\u7684\u5BF9\u9F50\u65B9\u5F0F <ol><li>flex-start \u4ECE\u5DE6\u5230\u53F3</li><li>flex-end \u4ECE\u53F3\u5230\u5DE6</li><li>center \u5C45\u4E2D</li><li>space-between \u4E24\u7AEF\u5BF9\u9F50</li><li>space-around \u6BCF\u4E2Aitem\u4E24\u4FA7\u4E2D\u95F4\u76F8\u7B49</li></ol></li><li>justify-content:\u5B9A\u4E49\u5728item\u5728\u4E3B\u8F74\u4E0A\u7684\u5BF9\u9F50\u65B9\u5F0F</li><li>flex: 1;\u4EE3\u8868\u4EC0\u4E48 <ol><li>\u7B2C\u4E00\u4E2A\u53C2\u6570\u8868\u793A: flex-grow \u5B9A\u4E49\u9879\u76EE\u7684\u653E\u5927\u6BD4\u4F8B\uFF0C\u9ED8\u8BA4\u4E3A0\uFF0C\u5373\u5982\u679C\u5B58\u5728\u5269\u4F59\u7A7A\u95F4\uFF0C\u4E5F\u4E0D\u653E\u5927</li><li>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u8868\u793A: flex-shrink \u5B9A\u4E49\u4E86\u9879\u76EE\u7684\u7F29\u5C0F\u6BD4\u4F8B\uFF0C\u9ED8\u8BA4\u4E3A1\uFF0C\u5373\u5982\u679C\u7A7A\u95F4\u4E0D\u8DB3\uFF0C\u8BE5\u9879\u76EE\u5C06\u7F29\u5C0F</li><li>\u7B2C\u4E09\u4E2A\u53C2\u6570\u8868\u793A: flex-basis\u7ED9\u4E0A\u9762\u4E24\u4E2A\u5C5E\u6027\u5206\u914D\u591A\u4F59\u7A7A\u95F4\u4E4B\u524D, \u8BA1\u7B97\u9879\u76EE\u662F\u5426\u6709\u591A\u4F59\u7A7A\u95F4, \u9ED8\u8BA4\u503C\u4E3A auto, \u5373\u9879\u76EE\u672C\u8EAB\u7684\u5927\u5C0F</li></ol></li></ol><h3 id="bfc" tabindex="-1">BFC <a class="header-anchor" href="#bfc" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">BFC\u6982\u5FF5</p><p>BFC\u5C31\u662F\u201C\u5757\u7EA7\u683C\u5F0F\u5316\u4E0A\u4E0B\u6587\u201D\u7684\u610F\u601D\uFF0C\u4E5F\u6709\u8BD1\u4F5C\u201C\u5757\u7EA7\u683C\u5F0F\u5316\u8303\u56F4\u201D\u3002\u5B83\u662F W3C CSS 2.1 \u89C4\u8303\u4E2D\u7684\u4E00\u4E2A\u6982\u5FF5\uFF0C\u5B83\u51B3\u5B9A\u4E86\u5143\u7D20\u5982\u4F55\u5BF9\u5176\u5185\u5BB9\u8FDB\u884C\u5B9A\u4F4D\uFF0C\u4EE5\u53CA\u4E0E\u5176\u4ED6\u5143\u7D20\u7684\u5173\u7CFB\u548C\u76F8\u4E92\u4F5C\u7528\u3002\u901A\u4FD7\u7684\u8BB2\uFF0C\u5C31\u662F\u4E00\u4E2A\u7279\u6B8A\u7684\u5757\uFF0C\u5185\u90E8\u6709\u81EA\u5DF1\u7684\u5E03\u5C40\u65B9\u5F0F\uFF0C\u4E0D\u53D7\u5916\u8FB9\u5143\u7D20\u7684\u5F71\u54CD\u3002</p><p>\u539F\u7406:</p><ul><li>BFC\u5185\u90E8\u7684\u76D2\u5B50\uFF0C\u4F1A\u5728\u5782\u76F4\u65B9\u5411\uFF0C\u4E00\u4E2A\u63A5\u4E00\u4E2A\u5730\u653E\u7F6E\u3002\u5782\u76F4\u65B9\u5411\u4E0A\u4E5F\u4F1A\u53D1\u751F\u8FB9\u8DDD\u91CD\u53E0\u3002</li><li>BFC\u5C31\u662F\u9875\u9762\u4E0A\u7684\u4E00\u4E2A\u72EC\u7ACB\u5BB9\u5668\uFF0C\u5BB9\u5668\u91CC\u9762\u7684\u5B50\u5143\u7D20\u4E0D\u4F1A\u5F71\u54CD\u5230\u5916\u9762\u7684\u5143\u7D20\uFF0C\u5916\u8FB9\u7684\u4E5F\u4E0D\u4F1A\u5F71\u54CD\u91CC\u8FB9\u7684\u3002</li><li>BFC\u7684\u533A\u57DF\u4E0D\u4F1A\u4E0Efloat box\u91CD\u53E0\u3002 \u8BA1\u7B97BFC\u7684\u9AD8\u5EA6\u65F6\uFF0C\u6D6E\u52A8\u5143\u7D20\u4E5F\u88AB\u8BA1\u7B97\u5728\u5185</li></ul></div><p>BFC\u5982\u4F55\u4EA7\u751F</p><div class="language-css"><pre><code><span class="token punctuation">{</span>
  <span class="token property">overflow</span><span class="token punctuation">:</span> auto/ hidden<span class="token punctuation">;</span>
  <span class="token property">position</span><span class="token punctuation">:</span> absolute/ fixed<span class="token punctuation">;</span>
  <span class="token property">float</span><span class="token punctuation">:</span> left/ right<span class="token punctuation">;</span>
  <span class="token property">display</span><span class="token punctuation">:</span> inline-block/ table-cell/ table-caption/ flex/ inline-flex
<span class="token punctuation">}</span>
</code></pre></div><p>\u5728\u5C5E\u6027\u503C\u4E3A\u8FD9\u4E9B\u7684\u60C5\u51B5\u4E0B\uFF0C\u90FD\u4F1A\u8BA9\u6240\u5C5E\u7684box\u4EA7\u751FBFC\u3002</p><h2 id="javascript\u76F8\u5173" tabindex="-1">JavaScript\u76F8\u5173 <a class="header-anchor" href="#javascript\u76F8\u5173" aria-hidden="true">#</a></h2><h3 id="script\u6807\u7B7E\u5C5E\u6027" tabindex="-1">script\u6807\u7B7E\u5C5E\u6027 <a class="header-anchor" href="#script\u6807\u7B7E\u5C5E\u6027" aria-hidden="true">#</a></h3><ul><li>async\uFF1A\u53EF\u9009\u3002\u8868\u793A\u5E94\u8BE5\u7ACB\u5373\u5F00\u59CB\u4E0B\u8F7D\u811A\u672C\uFF0C\u4F46\u4E0D\u80FD\u963B\u6B62\u5176\u4ED6\u9875\u9762\u52A8\u4F5C\uFF0C\u6BD4\u5982\u4E0B\u8F7D\u8D44\u6E90\u6216\u7B49\u5F85\u5176\u4ED6\u811A\u672C\u52A0\u8F7D\u3002\u53EA\u5BF9\u5916\u90E8\u811A\u672C\u6587\u4EF6\u6709\u6548\u3002</li><li>charset\uFF1A\u53EF\u9009\u3002\u4F7F\u7528 src \u5C5E\u6027\u6307\u5B9A\u7684\u4EE3\u7801\u5B57\u7B26\u96C6\u3002\u8FD9\u4E2A\u5C5E\u6027\u5F88\u5C11\u4F7F\u7528\uFF0C\u56E0\u4E3A\u5927\u591A\u6570\u6D4F\u89C8\u5668\u4E0D\u5728\u4E4E\u5B83\u7684\u503C\u3002</li><li>crossorigin\uFF1A\u53EF\u9009\u3002\u914D\u7F6E\u76F8\u5173\u8BF7\u6C42\u7684CORS\uFF08\u8DE8\u6E90\u8D44\u6E90\u5171\u4EAB\uFF09\u8BBE\u7F6E\u3002\u9ED8\u8BA4\u4E0D\u4F7F\u7528CORS\u3002crossorigin=&quot;anonymous&quot;\u914D\u7F6E\u6587\u4EF6\u8BF7\u6C42\u4E0D\u5FC5\u8BBE\u7F6E\u51ED\u636E\u6807\u5FD7\u3002crossorigin=&quot;use-credentials&quot; \u8BBE\u7F6E\u51ED\u636E\u6807\u5FD7\uFF0C\u610F\u5473\u7740\u51FA\u7AD9\u8BF7\u6C42\u4F1A\u5305\u542B\u51ED\u636E\u3002</li><li>defer\uFF1A\u53EF\u9009\u3002\u8868\u793A\u811A\u672C\u53EF\u4EE5\u5EF6\u8FDF\u5230\u6587\u6863\u5B8C\u5168\u88AB\u89E3\u6790\u548C\u663E\u793A\u4E4B\u540E\u518D\u6267\u884C\u3002\u53EA\u5BF9\u5916\u90E8\u811A\u672C\u6587\u4EF6\u6709\u6548\u3002\u5728 IE7 \u53CA\u66F4\u65E9\u7684\u7248\u672C\u4E2D\uFF0C\u5BF9\u884C\u5185\u811A\u672C\u4E5F\u53EF\u4EE5\u6307\u5B9A\u8FD9\u4E2A\u5C5E\u6027\u3002</li><li>integrity\uFF1A\u53EF\u9009\u3002\u5141\u8BB8\u6BD4\u5BF9\u63A5\u6536\u5230\u7684\u8D44\u6E90\u548C\u6307\u5B9A\u7684\u52A0\u5BC6\u7B7E\u540D\u4EE5\u9A8C\u8BC1\u5B50\u8D44\u6E90\u5B8C\u6574\u6027\uFF08SRI\uFF0CSubresource Integrity\uFF09\u3002\u5982\u679C\u63A5\u6536\u5230\u7684\u8D44\u6E90\u7684\u7B7E\u540D\u4E0E\u8FD9\u4E2A\u5C5E\u6027\u6307\u5B9A\u7684\u7B7E\u540D\u4E0D\u5339\u914D\uFF0C\u5219\u9875\u9762\u4F1A\u62A5\u9519\uFF0C\u811A\u672C\u4E0D\u4F1A\u6267\u884C\u3002\u8FD9\u4E2A\u5C5E\u6027\u53EF\u4EE5\u7528\u4E8E\u786E\u4FDD\u5185\u5BB9\u5206\u53D1\u7F51\u7EDC\uFF08CDN\uFF0CContent Delivery Network\uFF09\u4E0D\u4F1A\u63D0\u4F9B\u6076\u610F\u5185\u5BB9\u3002</li><li>src\uFF1A\u53EF\u9009\u3002\u8868\u793A\u5305\u542B\u8981\u6267\u884C\u7684\u4EE3\u7801\u7684\u5916\u90E8\u6587\u4EF6\u3002</li><li>type\uFF1A\u53EF\u9009\u3002\u4EE3\u66FF language\uFF0C\u8868\u793A\u4EE3\u7801\u5757\u4E2D\u811A\u672C\u8BED\u8A00\u7684\u5185\u5BB9\u7C7B\u578B\uFF08\u4E5F\u79F0 MIME \u7C7B\u578B\uFF09\u3002\u6309\u7167\u60EF\u4F8B\uFF0C\u8FD9\u4E2A\u503C\u59CB\u7EC8\u90FD\u662F&quot;text/javascript&quot;\uFF0C\u5C3D\u7BA1&quot;text/javascript&quot;\u548C&quot;text/ecmascript&quot; \u90FD\u5DF2\u7ECF\u5E9F\u5F03\u4E86\u3002JavaScript \u6587\u4EF6\u7684 MIME \u7C7B\u578B\u901A\u5E38\u662F&quot;application/x-javascript&quot;\uFF0C\u4E0D\u8FC7\u7ED9type \u5C5E\u6027\u8FD9\u4E2A\u503C\u6709\u53EF\u80FD\u5BFC\u81F4\u811A\u672C\u88AB\u5FFD\u7565\u3002\u5728\u975E IE \u7684\u6D4F\u89C8\u5668\u4E2D\u6709\u6548\u7684\u5176\u4ED6\u503C\u8FD8\u6709&quot; application/javascript&quot;\u548C&quot;application/ecmascript&quot;\u3002\u5982\u679C\u8FD9\u4E2A\u503C\u662F module\uFF0C\u5219\u4EE3\u7801\u4F1A\u88AB\u5F53\u6210 ES6 \u6A21\u5757\uFF0C\u800C\u4E14\u53EA\u6709\u8FD9\u65F6\u5019\u4EE3\u7801\u4E2D\u624D\u80FD\u51FA\u73B0 import \u548C export \u5173\u952E\u5B57\u3002</li></ul><div class="warning custom-block"><p class="custom-block-title">\u6CE8\u610F</p><ol><li>defer \u548C async \u5728\u7F51\u7EDC\u8BFB\u53D6\uFF08\u4E0B\u8F7D\uFF09\u8FD9\u5757\u513F\u662F\u4E00\u6837\u7684\uFF0C\u90FD\u662F\u5F02\u6B65\u7684\uFF08\u76F8\u8F83\u4E8E HTML \u89E3\u6790\uFF09</li><li>\u5B83\u4FE9\u7684\u5DEE\u522B\u5728\u4E8E\u811A\u672C\u4E0B\u8F7D\u5B8C\u4E4B\u540E\u4F55\u65F6\u6267\u884C\uFF0C\u663E\u7136 defer \u662F\u6700\u63A5\u8FD1\u6211\u4EEC\u5BF9\u4E8E\u5E94\u7528\u811A\u672C\u52A0\u8F7D\u548C\u6267\u884C\u7684\u8981\u6C42\u7684</li><li>\u5173\u4E8E defer\uFF0C\u6B64\u56FE\u672A\u5C3D\u4E4B\u5904\u5728\u4E8E\u5B83\u662F\u6309\u7167\u52A0\u8F7D\u987A\u5E8F\u6267\u884C\u811A\u672C\u7684\uFF0C\u8FD9\u4E00\u70B9\u8981\u5584\u52A0\u5229\u7528</li><li>async \u7684\u811A\u672C\u5E76\u4E0D\u4FDD\u8BC1\u80FD\u6309\u7167\u5B83\u4EEC\u51FA\u73B0\u7684\u6B21\u5E8F\u6267\u884C\uFF0Casync \u5C5E\u6027\u7684\u76EE\u7684\u662F\u544A\u8BC9\u6D4F\u89C8\u5668\uFF0C\u4E0D\u5FC5\u7B49\u811A\u672C\u4E0B\u8F7D\u548C\u6267\u884C\u5B8C\u540E\u518D\u52A0\u8F7D\u9875\u9762\uFF0C\u540C\u6837\u4E5F\u4E0D\u5FC5\u7B49\u5230\u8BE5\u5F02\u6B65\u811A\u672C\u4E0B\u8F7D\u548C\u6267\u884C\u540E\u518D\u52A0\u8F7D\u5176\u4ED6\u811A\u672C\u3002\u6B63\u56E0\u4E3A\u5982\u6B64\uFF0C\u5F02\u6B65\u811A\u672C\u4E0D\u5E94\u8BE5\u5728\u52A0\u8F7D\u671F\u95F4\u4FEE\u6539 DOM\u3002\u5F02\u6B65\u811A\u672C\u4FDD\u8BC1\u4F1A\u5728\u9875\u9762\u7684 load \u4E8B\u4EF6\u524D\u6267\u884C\uFF0C\u4F46\u53EF\u80FD\u4F1A\u5728 DOMContentLoaded\uFF08\u53C2\u89C1\u7B2C 17 \u7AE0\uFF09\u4E4B\u524D\u6216\u4E4B\u540E</li><li>\u4ED4\u7EC6\u60F3\u60F3\uFF0Casync \u5BF9\u4E8E\u5E94\u7528\u811A\u672C\u7684\u7528\u5904\u4E0D\u5927\uFF0C\u56E0\u4E3A\u5B83\u5B8C\u5168\u4E0D\u8003\u8651\u4F9D\u8D56\uFF08\u54EA\u6015\u662F\u6700\u4F4E\u7EA7\u7684\u987A\u5E8F\u6267\u884C\uFF09\uFF0C\u4E0D\u8FC7\u5B83\u5BF9\u90A3\u4E9B\u53EF\u4EE5\u4E0D\u4F9D\u8D56\u4EFB\u4F55\u811A\u672C\u6216\u4E0D\u88AB\u4EFB\u4F55\u811A\u672C\u4F9D\u8D56\u7684\u811A\u672C\u6765\u8BF4\u5374\u662F\u975E\u5E38\u5408\u9002\u7684\uFF0C\u6700\u5178\u578B\u7684\u4F8B\u5B50\uFF1AGoogle Analytics</li></ol></div><h3 id="var-let-const\u533A\u522B" tabindex="-1">var,let,const\u533A\u522B <a class="header-anchor" href="#var-let-const\u533A\u522B" aria-hidden="true">#</a></h3><table><thead><tr><th style="text-align:center;">\u533A\u522B</th><th style="text-align:center;">var</th><th style="text-align:center;">let</th><th style="text-align:center;">const</th></tr></thead><tbody><tr><td style="text-align:center;">\u662F\u5426\u4F1A\u4EA7\u751F&quot;\u5757\u7EA7\u4F5C\u7528\u57DF&quot;</td><td style="text-align:center;">\u274E</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td></tr><tr><td style="text-align:center;">\u662F\u5426\u4F1A\u88AB\u58F0\u660E\u63D0\u5347</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td></tr><tr><td style="text-align:center;">\u662F\u5426\u4F1A\u4FDD\u5B58\u5230window\u4E2D</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td></tr><tr><td style="text-align:center;">\u76F8\u540C\u4F5C\u7528\u57DF\u4E2D\u80FD\u5426\u91CD\u590D\u58F0\u660E</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td></tr><tr><td style="text-align:center;">\u662F\u5426\u80FD\u63D0\u524D\u4F7F\u7528</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td></tr><tr><td style="text-align:center;">\u662F\u5426\u5FC5\u987B\u8BBE\u7F6E\u521D\u59CB\u503C</td><td style="text-align:center;">\u274E</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td></tr><tr><td style="text-align:center;">\u662F\u5426\u4FEE\u6539\u5B9E\u9645\u4FDD\u5B58\u5728\u53D8\u91CF\u4E2D\u7684\u539F\u59CB\u7C7B\u578B\u503C\u6216\u5F15\u7528\u7C7B\u578B\u5730\u5740</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u2705</td><td style="text-align:center;">\u274E</td></tr></tbody></table><h3 id="js\u521B\u5EFA\u5BF9\u8C61\u7684\u65B9\u5F0F" tabindex="-1">JS\u521B\u5EFA\u5BF9\u8C61\u7684\u65B9\u5F0F <a class="header-anchor" href="#js\u521B\u5EFA\u5BF9\u8C61\u7684\u65B9\u5F0F" aria-hidden="true">#</a></h3><ol><li>new Object() \u7F3A\u70B9: \u6B65\u9AA4\u591A</li><li>\u5B57\u9762\u91CF: var \u5BF9\u8C61\u540D={} \u7F3A\u70B9: \u5982\u679C\u53CD\u590D\u521B\u5EFA\u591A\u4E2A\u5BF9\u8C61\uFF0C\u4EE3\u7801\u4F1A\u5F88\u5197\u4F59</li><li>\u5DE5\u5382\u51FD\u6570\u65B9\u5F0F</li></ol><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">createPerson</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  o<span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  o<span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  o<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
  <span class="token keyword">return</span> o<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token function">createPerson</span><span class="token punctuation">(</span><span class="token string">&quot;lilei&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7F3A\u70B9: \u672C\u8D28\u8FD8\u662FObject()\uFF0C\u5C06\u6765\u65E0\u6CD5\u6839\u636E\u5BF9\u8C61\u7684\u539F\u578B\u5BF9\u8C61\u51C6\u786E\u5224\u65AD\u5BF9\u8C61\u7684\u7C7B\u578B</p><ol start="4"><li>\u6784\u9020\u51FD\u6570\u65B9\u5F0F\uFF1A</li></ol><ul><li>\u5148\u7528\u6784\u9020\u51FD\u6570\u5B9A\u4E49\u4E00\u7C7B\u5BF9\u8C61\u7684\u7EDF\u4E00\u5C5E\u6027\u7ED3\u6784\u548C\u65B9\u6CD5</li><li>\u518D\u7528new\u8C03\u7528\u6784\u9020\u51FD\u6570\uFF0C\u53CD\u590D\u521B\u5EFA\u76F8\u540C\u5C5E\u6027\u7ED3\u6784\uFF0C\u4E0D\u540C\u5C5E\u6027\u503C\u7684\u591A\u4E2A\u5BF9\u8C61</li><li>\u7F3A\u70B9: \u5982\u679C\u6784\u9020\u51FD\u6570\u4E2D\u5305\u542B\u65B9\u6CD5\uFF0C\u5219\u91CD\u590D\u521B\u5EFA\uFF0C\u6D6A\u8D39\u5185\u5B58</li></ul><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">Student</span> <span class="token punctuation">(</span><span class="token parameter">sname<span class="token punctuation">,</span> sage</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>sname <span class="token operator">=</span> sname<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>sage <span class="token operator">=</span> sage<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">intr</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> lilei <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;lilei&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span>
</code></pre></div><ol start="5"><li>\u539F\u578B\u5BF9\u8C61\u65B9\u5F0F\uFF1A\u5148\u521B\u5EFA\u5B8C\u5168\u76F8\u540C\u7684\u5BF9\u8C61\uFF0C\u518D\u7ED9\u5B50\u5BF9\u8C61\u6DFB\u52A0\u4E2A\u6027\u5316\u5C5E\u6027\u3002</li></ol><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">Person</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token punctuation">}</span>

<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;\u4E3B\u4EBA\u5F88\u61D2&quot;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">11</span><span class="token punctuation">;</span>
<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u521B\u5EFA\u4E00\u4E2A\u5B9E\u4F8Bp1</span>
p1<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Li Lei&quot;</span> <span class="token comment">//\u7981\u6B62\u4FEE\u6539\u5171\u6709\u5C5E\u6027\uFF0C\u800C\u662F\u81EA\u52A8\u592A\u4F60\u5BB6\u81EA\u7531\u5C5E\u6027</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u521B\u5EFA\u5B9E\u4F8Bp2</span>
p2<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&quot;Han Meimei&quot;</span><span class="token punctuation">;</span> <span class="token comment">//\u540C\u4E0A</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lilei<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hmm<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7F3A\u70B9: \u6B65\u9AA4\u7E41\u7410</p><ol start="6"><li>\u6DF7\u5408\u6A21\u5F0F\uFF1A\u5148\u521B\u5EFA\u5B8C\u5168\u76F8\u540C\u7684\u5BF9\u8C61\uFF0C\u518D\u7ED9\u5B50\u5BF9\u8C61\u6DFB\u52A0\u4E2A\u6027\u5316\u5C5E\u6027\u3002</li></ol><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">Person</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;Li Lei&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;Han Meimei&quot;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lilei<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hmm<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7F3A\u70B9\uFF1A \u4E0D\u7B26\u5408\u9762\u5411\u5BF9\u8C61\u5C01\u88C5\u601D\u60F3</p><ol start="7"><li>\u52A8\u6001\u6DF7\u5408\uFF1A\u5148\u521B\u5EFA\u5B8C\u5168\u76F8\u540C\u7684\u5BF9\u8C61\uFF0C\u518D\u7ED9\u5B50\u5BF9\u8C61\u6DFB\u52A0\u4E2A\u6027\u5316\u5C5E\u6027\u3002 \u7F3A\u70B9: \u8BED\u4E49\u4E0D\u7B26\uFF0C\u5176\u5B9Eif\u53EA\u5728\u521B\u5EFA\u7B2C\u4E00\u4E2A\u5BF9\u8C61\u65F6\u6709\u610F\u4E49\u3002</li></ol><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">Person</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>say <span class="token operator">===</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;Li Lei&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token string">&quot;Han Meimei&quot;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lilei<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hmm<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="8"><li>\u5BC4\u751F\u6784\u9020\u51FD\u6570\uFF1A\u6784\u9020\u51FD\u6570\u91CC\u8C03\u7528\u5176\u4ED6\u7684\u6784\u9020\u51FD\u6570</li></ol><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">Person</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>say <span class="token operator">===</span> <span class="token string">&quot;undefined&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Student</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age<span class="token punctuation">,</span> className</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> age<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u501F\u9E21\u751F\u86CB\u2014\u2014\u6A58\u5B50</span>
  p<span class="token punctuation">.</span>className <span class="token operator">=</span> className
  <span class="token keyword">return</span> p<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;Li Lei&quot;</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token string">&quot;\u521D\u4E002\u73ED&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Student</span><span class="token punctuation">(</span><span class="token string">&quot;Han Meimei&quot;</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token string">&quot;\u521D\u4E8C2\u73ED&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lilei<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>hmm<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7F3A\u70B9: \u53EF\u8BFB\u6027\u5DEE\u3002</p><ol start="9"><li>es5\u7684class</li></ol><h3 id="new-function\u8FC7\u7A0B" tabindex="-1">new Function\u8FC7\u7A0B <a class="header-anchor" href="#new-function\u8FC7\u7A0B" aria-hidden="true">#</a></h3><ol><li>\u521B\u5EFA\u4E00\u4E2A\u65B0\u7684\u7A7A\u5BF9\u8C61\u7B49\u5F85</li><li>\u8BA9\u5B50\u5BF9\u8C61\u7EE7\u627F\u6784\u9020\u51FD\u6570\u7684\u539F\u578B\u5BF9\u8C61</li><li>\u8C03\u7528\u6784\u9020\u51FD\u6570\uFF0C\u5C06this\u66FF\u6362\u4E3A\u65B0\u5BF9\u8C61\uFF0C\u901A\u8FC7\u5F3A\u884C\u8D4B\u503C\u65B9\u5F0F\u4E3A\u65B0\u5BF9\u8C61\u6DFB\u52A0 \u89C4\u5B9A\u7684\u5C5E\u6027</li><li>\u8FD4\u56DE\u65B0\u5BF9\u8C61\u5730\u5740</li></ol><h3 id="\u7EE7\u627F" tabindex="-1">\u7EE7\u627F <a class="header-anchor" href="#\u7EE7\u627F" aria-hidden="true">#</a></h3><ol><li>\u539F\u578B\u94FE\u5F0F\u7EE7\u627F: \u5C06\u7236\u7C7B\u7684\u5B9E\u4F8B\u4F5C\u4E3A\u5B50\u7C7B\u7684\u539F\u578B</li></ol><div class="language-javascript"><pre><code><span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u7236\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">I&#39;m </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u539F\u578B\u5BF9\u8C61\u65B9\u6CD5</span>
<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">eat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">food</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">+</span> <span class="token string">&#39;\u6B63\u5728\u5403\uFF1A&#39;</span> <span class="token operator">+</span> food<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Cat</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">}</span>

<span class="token class-name">Cat</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Cat</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;cat&#39;</span>
<span class="token keyword">var</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u7F3A\u70B9: \u521B\u5EFA\u5B50\u7C7B\u5B9E\u4F8B\u65F6\uFF0C\u65E0\u6CD5\u5411\u7236\u7C7B\u6784\u9020\u51FD\u6570\u4F20\u53C2</p><p>2.\u6784\u9020\u51FD\u6570\u7EE7\u627F:</p><div class="language-javascript"><pre><code><span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u7236\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">I&#39;m </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u539F\u578B\u5BF9\u8C61\u65B9\u6CD5</span>
<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">eat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">food</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u5403</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>food<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">Cat</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Animal</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
<span class="token punctuation">}</span>

<span class="token keyword">var</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><ol start="3"><li>\u5B9E\u4F8B\u7EE7\u627F</li></ol><div class="language-javascript"><pre><code><span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u7236\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">I&#39;m </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u539F\u578B\u5BF9\u8C61\u65B9\u6CD5</span>
<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">eat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">food</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u5403</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>food<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Cat</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> o <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5148\u521B\u5EFA\u5B50\u7C7B\u578B\u5B9E\u4F8B</span>
  o<span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>
  <span class="token keyword">return</span> o<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="4"><li>\u62F7\u8D1D\u7EE7\u627F: \u65E0\u6CD5\u83B7\u53D6\u7236\u7C7B\u4E0D\u53EFfor in\u904D\u5386\u7684\u65B9\u6CD5</li></ol><div class="language-javascript"><pre><code><span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u7236\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">I&#39;m </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u539F\u578B\u5BF9\u8C61\u65B9\u6CD5</span>
<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">eat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">food</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u5403</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>food<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Cat</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> animal <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> p <span class="token keyword">in</span> animal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Cat</span><span class="token punctuation">.</span>prototype<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> animal<span class="token punctuation">[</span>p<span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
<span class="token punctuation">}</span>

<span class="token keyword">var</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="5"><li>\u7EC4\u5408\u7EE7\u627F</li></ol><div class="language-javascript"><pre><code><span class="token comment">// \u5B9A\u4E49\u4E00\u4E2A\u7236\u7C7B\u578B</span>
<span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">I&#39;m </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u539F\u578B\u5BF9\u8C61\u65B9\u6CD5</span>
<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">eat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">food</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u5403</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>food<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Cat</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Animal</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
<span class="token punctuation">}</span>

<span class="token class-name">Cat</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Animal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Cat</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor <span class="token operator">=</span> Cat<span class="token punctuation">;</span>
<span class="token keyword">var</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="6"><li>\u5BC4\u751F\u7EC4\u5408\u7EE7\u627F</li></ol><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">Animal</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function-variable function">say</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">I&#39;m </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u539F\u578B\u5BF9\u8C61\u65B9\u6CD5</span>
<span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">eat</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">food</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\u5403</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>food<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">function</span> <span class="token function">Cat</span> <span class="token punctuation">(</span><span class="token parameter">name<span class="token punctuation">,</span> age</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">Animal</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age
<span class="token punctuation">}</span>

<span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// \u521B\u5EFA\u4E00\u4E2A\u6CA1\u6709\u5B9E\u4F8B\u65B9\u6CD5\u7684\u7C7B</span>
  <span class="token keyword">var</span> <span class="token function-variable function">Super</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token class-name">Super</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token class-name">Animal</span><span class="token punctuation">.</span>prototype<span class="token punctuation">;</span> <span class="token comment">//\u5C06\u5B9E\u4F8B\u4F5C\u4E3A\u5B50\u7C7B\u7684\u539F\u578B</span>
  <span class="token class-name">Cat</span><span class="token punctuation">.</span>prototype <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Super</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> cat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Cat</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ol start="7"><li>ES6 class extends\u7EE7\u627F</li></ol><div class="language-javascript"><pre><code><span class="token keyword">class</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Cat</span> <span class="token keyword">extends</span> <span class="token class-name">Animal</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">name</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">constructor</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u7BAD\u5934\u51FD\u6570\u4EC0\u4E48\u65F6\u5019\u4E0D\u80FD\u4F7F\u7528" tabindex="-1">\u7BAD\u5934\u51FD\u6570\u4EC0\u4E48\u65F6\u5019\u4E0D\u80FD\u4F7F\u7528 <a class="header-anchor" href="#\u7BAD\u5934\u51FD\u6570\u4EC0\u4E48\u65F6\u5019\u4E0D\u80FD\u4F7F\u7528" aria-hidden="true">#</a></h3><ol><li>\u6784\u9020\u51FD\u6570\u4E0D\u80FD\u4F7F\u7528</li><li>\u5BF9\u8C61\u7684\u65B9\u6CD5\u4E0D\u80FD\u7528</li><li>\u539F\u578B\u5BF9\u8C61\u65B9\u6CD5\u4E0D\u80FD\u7528</li><li>DOM\u4E2D\u65F6\u95F4\u5904\u7406\u51FD\u6570\u4E0D\u80FD\u7528</li><li>\u7BAD\u5934\u51FD\u6570\u65E0\u6CD5\u4F7F\u7528call\uFF0Capply\uFF0Cbind\u7B49</li><li>\u7BAD\u5934\u51FD\u6570\u4E0D\u652F\u6301arguments</li><li>\u7BAD\u5934\u51FD\u6570\u6CA1\u6709prototype</li></ol><div class="tip custom-block"><p class="custom-block-title">\u6982\u5FF5</p><ul><li>\u7236\u5BF9\u8C61\u4E2D\u7684\u6210\u5458, \u5B50\u5BF9\u8C61\u65E0\u9700\u91CD\u590D\u521B\u5EFA\uFF0C\u5C31\u53EF\u76F4\u63A5\u4F7F\u7528\uFF01</li><li>\u5C31\u50CF\u4F7F\u7528\u81EA\u5DF1\u7684\u6210\u5458\u4E00\u6837\uFF01</li><li>\u53EF\u4EE5\u76F4\u63A5this.\u5C5E\u6027\u540D/\u65B9\u6CD5\u540D()</li></ul></div><h3 id="\u6DF1\u62F7\u8D1D" tabindex="-1">\u6DF1\u62F7\u8D1D <a class="header-anchor" href="#\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a></h3><p>JavaScript\u4E2D\u5BF9\u8C61\u662F\u5F15\u7528\u7C7B\u578B\uFF0C\u4FDD\u5B58\u7684\u662F\u5730\u5740\uFF0C\u6DF1\u3001\u6D45\u62F7\u8D1D\u7684\u533A\u522B\u662F\uFF0C\u5F53\u62F7\u8D1D\u7ED3\u675F\u540E\uFF0C\u5728\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\u6539\u53D8\u539F\u5BF9\u8C61\u4E2D\u7684\u67D0\u4E00\u4E2A\u5F15\u7528\u7C7B\u578B\u5C5E\u6027\u7684\u503C\uFF0C\u65B0\u62F7\u8D1D\u51FA\u6765\u7684\u5BF9\u8C61\u4F9D\u7136\u53D7\u5F71\u54CD\u7684\u8BDD\uFF0C\u5C31\u662F\u6D45\u62F7\u8D1D\uFF0C\u53CD\u4E4B\u5C31\u662F\u6DF1\u62F7\u8D1D\u3002</p><ol><li>JSON.stringify()\u4EE5\u53CAJSON.parse()\uFF0C\u65E0\u6CD5\u6DF1\u514B\u9686undefined\u503C\u548C\u5185\u5D4C\u51FD\u6570</li><li>Object.assign(target, source)</li><li>\u9012\u5F52\u5B9E\u73B0\u6DF1\u62F7\u8D1D</li></ol><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">deepClone</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">isObject</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> o <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> o <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> o <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u975E\u5BF9\u8C61&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> isArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> newObj <span class="token operator">=</span> isArray <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token operator">...</span>obj<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>obj <span class="token punctuation">}</span><span class="token punctuation">;</span>
  Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>newObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">isObject</span><span class="token punctuation">(</span>newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> newObj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;AAA&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span>
  job<span class="token operator">:</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;FE&#39;</span><span class="token punctuation">,</span>
    money<span class="token operator">:</span> <span class="token number">12000</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="call-apply-bin" tabindex="-1">call, apply, bin <a class="header-anchor" href="#call-apply-bin" aria-hidden="true">#</a></h3><p>call\u5B9E\u73B0</p><div class="language-javascript"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myCall</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;not a function&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> symbolFn <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
  context <span class="token operator">=</span> context <span class="token operator">||</span> window
  context<span class="token punctuation">[</span>symbolFn<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">this</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> context<span class="token punctuation">[</span>symbolFn<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span>
  <span class="token keyword">delete</span> context<span class="token punctuation">[</span>symbolFn<span class="token punctuation">]</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
<span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;obj&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

foo<span class="token punctuation">.</span><span class="token function">myCall</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span> <span class="token comment">// obj</span>
</code></pre></div><p>apply</p><div class="language-javascript"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myApply</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  context <span class="token operator">=</span> context <span class="token operator">||</span> window<span class="token punctuation">;</span>
  context<span class="token punctuation">.</span>fn <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> result <span class="token operator">=</span> arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">?</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> context<span class="token punctuation">.</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">delete</span> context<span class="token punctuation">.</span>fn<span class="token punctuation">;</span>
  <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  age<span class="token operator">:</span> <span class="token number">101</span>
<span class="token punctuation">}</span>
foo<span class="token punctuation">.</span><span class="token function">myApply</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA101</span>
</code></pre></div><p>bind</p><div class="language-javascript"><pre><code><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">myBind</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">this</span> <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token function">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> self <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> args <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>arguments<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token constant">F</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span> <span class="token keyword">instanceof</span> <span class="token class-name">F</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">self</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token function">self</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>context<span class="token punctuation">,</span> args<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span><span class="token operator">...</span>arguments<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">foo</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>age<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  age<span class="token operator">:</span> <span class="token number">121</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> newFunc <span class="token operator">=</span> foo<span class="token punctuation">.</span><span class="token function">myBind</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">newFunc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u8F93\u51FA121</span>
</code></pre></div><h3 id="\u6D4F\u89C8\u5668\u4E2D\u7684\u8FDB\u7A0B" tabindex="-1">\u6D4F\u89C8\u5668\u4E2D\u7684\u8FDB\u7A0B <a class="header-anchor" href="#\u6D4F\u89C8\u5668\u4E2D\u7684\u8FDB\u7A0B" aria-hidden="true">#</a></h3><ol><li>\u6D4F\u89C8\u5668\u8FDB\u7A0B\uFF1A\u8D1F\u8D23\u754C\u9762\u663E\u793A\u3001\u7528\u6237\u4EA4\u4E92\u3001\u5B50\u8FDB\u7A0B\u7BA1\u7406\uFF0C\u63D0\u4F9B\u5B58\u50A8\u7B49\u3002</li><li>\u6E32\u67D3\u8FDB\u7A0B\uFF1A\u6BCF\u4E2A\u4E5F\u5361\u90FD\u6709\u5355\u72EC\u7684\u6E32\u67D3\u8FDB\u7A0B\uFF0C\u6838\u5FC3\u7528\u4E8E\u6E32\u67D3\u9875\u9762\u3002</li><li>\u7F51\u7EDC\u8FDB\u7A0B\uFF1A\u4E3B\u8981\u5904\u7406\u7F51\u7EDC\u8D44\u6E90\u52A0\u8F7D(HTML\u3001CSS,\u3001JS\u7B49)</li><li>GPU\u8FDB\u7A0B\uFF1A3d\u7ED8\u5236,\u63D0\u9AD8\u6027\u80FD</li><li>\u63D2\u4EF6\u8FDB\u7A0B\uFF1A chrome\u4E2D\u5B89\u88C5\u7684\u4E00\u4E9B\u63D2\u4EF6</li></ol><h3 id="\u6E32\u67D3\u8FDB\u7A0B\uFF08\u5305\u542B\u7740\u591A\u4E2A\u7EBF\u7A0B\uFF09" tabindex="-1">\u6E32\u67D3\u8FDB\u7A0B\uFF08\u5305\u542B\u7740\u591A\u4E2A\u7EBF\u7A0B\uFF09 <a class="header-anchor" href="#\u6E32\u67D3\u8FDB\u7A0B\uFF08\u5305\u542B\u7740\u591A\u4E2A\u7EBF\u7A0B\uFF09" aria-hidden="true">#</a></h3><ol><li>GUI\u6E32\u67D3\u7EBF\u7A0B \uFF08\u6E32\u67D3\u9875\u9762\u7684\uFF09</li><li>js\u5F15\u64CE\u7EBF\u7A0B \u4ED6\u548C\u9875\u9762\u6E32\u67D3\u65F6\u4E92\u65A5</li><li>\u4E8B\u4EF6\u89E6\u53D1\u7EBF\u7A0B \u72EC\u7ACB\u7684\u7EBF\u7A0B EventLoop</li><li>\u4E8B\u4EF6 click\u3001setTimeout\u3001ajax\u4E5F\u662F\u4E00\u4E2A\u72EC\u7ACB\u7EBF\u7A0B \u5FAE\u4EFB\u52A1\u961F\u5217\u6BCF\u6B21\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A\u5168\u65B0\u7684\u961F\u5217\u3001\u4E8B\u4EF6\u961F\u5217\u4EC5\u6709\u4E00\u4E2A(\u5FAE\u4EFB\u52A1\u961F\u5217\u6BCF\u6B21\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A\u5168\u65B0\u7684\u961F\u5217\u3001\u4E8B\u4EF6\u961F\u5217\u4EC5\u6709\u4E00\u4E2A)</li><li>\u4E8B\u4EF6\u961F\u5217\u3001\u6D88\u606F\u961F\u5217\uFF1A\u5B58\u653E\u5B9A\u65F6\u5668\u5230\u8FBE\u65F6\u95F4\u7684\u56DE\u8C03\u51FD\u6570\u3001ajax\u56DE\u8C03\u6210\u529F\u7684\u51FD\u6570\u7B49</li><li>\u4E8B\u4EF6\u5FAA\u73AF\uFF1A\u4E0D\u65AD\u68C0\u6D4B\u8C03\u7528\u6808\u662F\u5426\u4E3A\u7A7A\uFF0C\u5982\u679C\u4E3A\u7A7A\u5219\u4ECE\u4E8B\u4EF6\u5BF9\u5217\u4E2D\u53D6\u51FA\u4E00\u4E2A\u6765\u6267\u884C</li></ol><h3 id="\u5B8F\u4EFB\u52A1-\u5FAE\u4EFB\u52A1" tabindex="-1">\u5B8F\u4EFB\u52A1|\u5FAE\u4EFB\u52A1 <a class="header-anchor" href="#\u5B8F\u4EFB\u52A1-\u5FAE\u4EFB\u52A1" aria-hidden="true">#</a></h3><ol><li>\u5B8F\u4EFB\u52A1script ui \u6E32\u67D3\u3001setTimeout\u3001setInterval\u3001postMessage\u3001MessageChannel\u3001SetImmediate</li><li>\u5FAE\u4EFB\u52A1promise mutationObserver\u3001process.nextTick</li></ol><div class="tip custom-block"><p class="custom-block-title">\u63D0\u793A</p><p>\u6BCF\u5FAA\u73AF\u4E00\u6B21\u4F1A\u6267\u884C\u4E00\u4E2A\u5B8F\u4EFB\u52A1\uFF0C\u5E76\u6E05\u7A7A\u5BF9\u5E94\u7684\u5FAE\u4EFB\u52A1\u961F\u5217\uFF0C\u6BCF\u6B21\u4E8B\u4EF6\u5FAA\u73AF\u5B8C\u6BD5\u540E\u4F1A\u5224\u65AD\u9875\u9762\u662F\u5426\u9700\u8981\u91CD\u65B0\u6E32\u67D3 \uFF08\u5927\u7EA616.6ms\u4F1A\u6E32\u67D3\u4E00\u6B21\uFF09</p></div><h3 id="\u5229\u7528swc\u6216\u8005esbuild\u63D0\u5347webpack\u6784\u5EFA\u901F\u5EA6" tabindex="-1">\u5229\u7528swc\u6216\u8005esbuild\u63D0\u5347webpack\u6784\u5EFA\u901F\u5EA6 <a class="header-anchor" href="#\u5229\u7528swc\u6216\u8005esbuild\u63D0\u5347webpack\u6784\u5EFA\u901F\u5EA6" aria-hidden="true">#</a></h3><div class="tip custom-block"><p class="custom-block-title">\u4EC0\u4E48\u662F swc \u548C esbuild</p><p>swc\uFF08stands for Speedy Web Compiler\uFF09\u662F\u4E00\u4E2A\u57FA\u4E8E Rust \u8BED\u8A00\u7684\u53EF\u6269\u5C55\u5E73\u53F0\uFF0C\u76EE\u524D\u5DF2\u7ECF\u88AB Next.js\u3001Parcel\u3001Deno \u7B49\u4F7F\u7528\u3002\u5B83\u652F\u6301\u7F16\u8BD1\u548C\u6253\u5305\u3002 esbuild \u662F\u4E00\u4E2A\u57FA\u4E8E Go \u8BED\u8A00\u7684\u6784\u5EFA\u5DE5\u5177\u3002</p></div><p>\u5404\u81EA\u7684\u7279\u6027</p><p>swc \u7684\u7279\u6027\uFF1A</p><ul><li>\u53EF\u7528\u4E8E\u7F16\u8BD1</li><li>\u53EF\u7528\u4E8E\u6253\u5305\uFF08swcpack\uFF09</li><li>\u652F\u6301 Minification</li><li>\u5229\u7528 WebAssembly \u8FDB\u884C\u8F6C\u6362</li><li>\u53EF\u4EE5\u7528\u4E8E webpack \u4E2D\uFF08swc-loader\uFF09</li><li>@swc/jest \u63D0\u9AD8 Jest \u6027\u80FD</li><li>\u652F\u6301\u81EA\u5B9A\u4E49\u63D2\u4EF6</li></ul><p>esbuild \u7684\u7279\u6027\uFF1A</p><ul><li>\u6781\u5FEB\u7684\u901F\u5EA6\uFF0C\u65E0\u9700\u7F13\u5B58</li><li>\u652F\u6301 ES6 \u548C CommonJS \u6A21\u5757</li><li>\u652F\u6301\u5BF9 ES6 \u6A21\u5757\u8FDB\u884C tree shaking</li><li>API \u53EF\u540C\u65F6\u7528\u4E8E JavaScript \u548C Go</li><li>\u517C\u5BB9 TypeScript \u548C JSX \u8BED\u6CD5</li><li>\u652F\u6301 Source maps</li><li>\u652F\u6301 Minification</li><li>\u652F\u6301 plugins</li><li>\u53EF\u7528\u4E8E webpack \u4E2D\uFF0C\u7ED3\u5408 esbuild-loader \u4F7F\u7528</li></ul><h4 id="swc-\u548C-esbuild-\u4E3A\u4EC0\u4E48\u5FEB" tabindex="-1">swc \u548C esbuild \u4E3A\u4EC0\u4E48\u5FEB <a class="header-anchor" href="#swc-\u548C-esbuild-\u4E3A\u4EC0\u4E48\u5FEB" aria-hidden="true">#</a></h4><p>swc\u4E3A\u4EC0\u4E48\u5FEB</p><p>babeljs\u7F16\u8BD1\u6D41\u7A0B</p><p>js\u6E90\u7801 -&gt; \u89E3\u6790\u6210AST\u6811 -&gt; \u8F6C\u8BD1\u6210\u4E8C\u8FDB\u5236\u7801 -&gt; \u673A\u5668\u7801</p><p>\u5C06\u6E90\u7801\u8F6C\u53D8\u6210<code>AST</code>\u6811\u5F88\u8017\u65F6\uFF0C\u800C<code>swc</code>\u662F\u57FA\u4E8E<code>Rust</code>\u8BED\u8A00\u7684\uFF0C\u5B83\u76F4\u63A5\u5C06\u6E90\u7801\u6839\u636E\u4E0D\u540C\u5E73\u53F0\u7F16\u8BD1\u6210\u5BF9\u5E94\u7684\u4E8C\u8FDB\u5236\u6587\u4EF6\uFF0C\u76F4\u63A5\u8DF3\u8FC7\u4E86\u8F6C<code>AST</code>\u6B65\u9AA4\uFF0C\u901F\u5EA6\u5927\u5927\u63D0\u5347\u3002</p><p>esbuild \u4E3A\u4EC0\u4E48\u5FEB</p><ul><li>\u5B83\u662F\u7528 Go \u8BED\u8A00\u7F16\u5199\u7684\uFF0C\u5E76\u53EF\u4EE5\u7F16\u8BD1\u4E3A\u672C\u5730\u4EE3\u7801\uFF1B</li><li>\u5927\u91CF\u4F7F\u7528\u5E76\u884C\u64CD\u4F5C\uFF1B</li><li>\u672A\u5F15\u7528\u7B2C\u4E09\u65B9\u4F9D\u8D56\uFF1B</li><li>\u5185\u5B58\u7684\u9AD8\u6548\u5229\u7528\uFF0C\u5C3D\u91CF\u590D\u7528 AST \u6570\u636E\u3002</li></ul><h4 id="swc-\u548C-esbuild-\u5728-webpack-\u4E2D\u4F7F\u7528" tabindex="-1">swc \u548C esbuild \u5728 webpack \u4E2D\u4F7F\u7528 <a class="header-anchor" href="#swc-\u548C-esbuild-\u5728-webpack-\u4E2D\u4F7F\u7528" aria-hidden="true">#</a></h4><p>\u5728 webpack \u4E2D\u9700\u8981\u7528 swc-loader \u6765\u4F7F\u7528</p><div class="language-javascript"><pre><code>module<span class="token operator">:</span> <span class="token punctuation">{</span>
  rules<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.m?js$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
      exclude<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(node_modules)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
      use<span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token comment">// \`.swcrc\` can be used to configure swc</span>
        loader<span class="token operator">:</span> <span class="token string">&quot;swc-loader&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>webpack \u4E2D\u9700\u8981\u7528 esbuild-loader \u6765\u4F7F\u7528</p><div class="language-javascript"><pre><code>module<span class="token operator">:</span> <span class="token punctuation">{</span>
  rules<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      test<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.(js|jsx)$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
      loader<span class="token operator">:</span> <span class="token string">&#39;esbuild-loader&#39;</span><span class="token punctuation">,</span>
      options<span class="token operator">:</span> <span class="token punctuation">{</span>
        loader<span class="token operator">:</span> <span class="token string">&#39;jsx&#39;</span><span class="token punctuation">,</span>
        target<span class="token operator">:</span> <span class="token string">&#39;es2015&#39;</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u8FDB\u9636\u9898" tabindex="-1">\u8FDB\u9636\u9898 <a class="header-anchor" href="#\u8FDB\u9636\u9898" aria-hidden="true">#</a></h2><h3 id="\u624B\u5199\u6DF1\u5408\u5E76" tabindex="-1">\u624B\u5199\u6DF1\u5408\u5E76 <a class="header-anchor" href="#\u624B\u5199\u6DF1\u5408\u5E76" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">deepMergeObject</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> rest <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      rest<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepMerge</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      rest<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> b
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">deepMergeArray</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">deepMerge</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>a <span class="token operator">||</span> <span class="token operator">!</span>b<span class="token punctuation">)</span> <span class="token keyword">return</span> a <span class="token operator">||</span> b
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> a <span class="token operator">!==</span> <span class="token keyword">typeof</span> b<span class="token punctuation">)</span> <span class="token keyword">return</span> b
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">deepMergeArray</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> a <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> b
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> a <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">deepMergeObject</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
  <span class="token keyword">return</span> b
<span class="token punctuation">}</span>

</code></pre></div><h3 id="promise-finally\u539F\u7406" tabindex="-1">Promise.finally\u539F\u7406 <a class="header-anchor" href="#promise-finally\u539F\u7406" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">finally</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BA9\u51FD\u6570\u6267\u884C \u5185\u90E8\u4F1A\u8C03\u7528\u65B9\u6CD5\uFF0C\u5982\u679C\u65B9\u6CD5\u662Fpromise\u9700\u8981\u7B49\u5F85\u4ED6\u5B8C\u6210</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> err
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="promise-race\u539F\u7406" tabindex="-1">Promise.race\u539F\u7406 <a class="header-anchor" href="#promise-race\u539F\u7406" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code>Promise<span class="token punctuation">.</span><span class="token function-variable function">race</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> promises<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> currentVal <span class="token operator">=</span> promises<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentVal <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> currentVal<span class="token punctuation">.</span>then <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        currentVal<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>currentVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="promisify\u539F\u7406" tabindex="-1">promisify\u539F\u7406 <a class="header-anchor" href="#promisify\u539F\u7406" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">promisify</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> read <span class="token operator">=</span> <span class="token function">promisify</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span>readFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u624B\u5199promise\u51FD\u6570" tabindex="-1">\u624B\u5199Promise\u51FD\u6570 <a class="header-anchor" href="#\u624B\u5199promise\u51FD\u6570" aria-hidden="true">#</a></h3><div class="language-ts"><pre><code><span class="token comment">// promise\u7684\u4E09\u79CD\u72B6\u6001\u503C</span>
<span class="token keyword">const</span> <span class="token keyword">enum</span> <span class="token constant">STATUS</span> <span class="token punctuation">{</span>
  <span class="token constant">PENDING</span> <span class="token operator">=</span> <span class="token string">&#39;PENDING&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">FUFILLED</span> <span class="token operator">=</span> <span class="token string">&#39;FUFILLED&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">REJECTED</span> <span class="token operator">=</span> <span class="token string">&#39;REJECTED&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isPromise</span> <span class="token operator">=</span> <span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> obj <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token keyword">typeof</span> obj<span class="token punctuation">.</span>then <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">type</span> <span class="token class-name">Resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>
<span class="token keyword">type</span> <span class="token class-name">Reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span>params<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">;</span>

<span class="token comment">// \u5904\u7406\u8FD4\u56DEpromise\u60C5\u51B5</span>
<span class="token keyword">function</span> <span class="token function">resolvePromise</span> <span class="token punctuation">(</span>
  x<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token punctuation">,</span>
  promise2<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token punctuation">,</span>
  resolve<span class="token operator">:</span> Resolve<span class="token punctuation">,</span>
  reject<span class="token operator">:</span> Reject
<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// If promise and x refer to the same object, reject promise with a TypeError as the reason.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> promise2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;\u51FA\u9519\u4E86&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5224\u65AD\u662F\u5426promise</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> called<span class="token operator">:</span> <span class="token builtin">boolean</span> <span class="token operator">=</span> <span class="token boolean">false</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> then <span class="token operator">=</span> x<span class="token punctuation">.</span>then
      <span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u5982\u679C\u91C7\u7528isPromise\uFF0C\u6D4B\u8BD5\u8FC7\u4E0D\u53BB</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> then <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">then</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
          x<span class="token punctuation">,</span>
          <span class="token keyword">function</span> <span class="token punctuation">(</span>y<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span>
            called <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token comment">// \u9012\u5F52\u89E3\u6790</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token keyword">function</span> <span class="token punctuation">(</span>r<span class="token operator">:</span> <span class="token builtin">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span>
            called <span class="token operator">=</span> <span class="token boolean">true</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">)</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span>
      called <span class="token operator">=</span> <span class="token boolean">true</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u666E\u901A\u503C</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name"><span class="token builtin">Promise</span></span> <span class="token punctuation">{</span>
  <span class="token function-variable function">defer</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  status<span class="token operator">:</span> <span class="token constant">STATUS</span> <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span>
  value<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token keyword">undefined</span>
  reason<span class="token operator">:</span> <span class="token builtin">any</span> <span class="token operator">=</span> <span class="token keyword">undefined</span>
  onResolvedCallbacks<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u6210\u529F\u56DE\u8C03</span>
  onRejectedCallbacks<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token comment">// \u5931\u8D25\u56DE\u8C03</span>

  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token function-variable function">executor</span><span class="token operator">:</span> <span class="token punctuation">(</span>resolve<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> reject<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token keyword">instanceof</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u662Fpromise \u5C31\u7EE7\u7EED\u9012\u5F52\u89E3\u6790</span>
        <span class="token keyword">return</span> val<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">FUFILLED</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> val
        <span class="token comment">// \u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\uFF0C\u5F02\u6B65</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onResolvedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span>reason<span class="token operator">:</span> <span class="token builtin">Function</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason
        <span class="token comment">// \u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\uFF0C\u5F02\u6B65</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">then</span> <span class="token punctuation">(</span>onFulfilled<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> onRejected<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7ED9\u5B9A\u4E00\u4E2A\u9ED8\u8BA4\u65B9\u6CD5</span>
    onFulfilled <span class="token operator">=</span>
      <span class="token keyword">typeof</span> onFulfilled <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span> <span class="token operator">?</span> <span class="token function-variable function">onFulfilled</span> <span class="token operator">:</span> <span class="token punctuation">(</span>x<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x
    onRejected <span class="token operator">=</span>
      <span class="token keyword">typeof</span> onRejected <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span>
        <span class="token operator">?</span> <span class="token function-variable function">onRejected</span>
        <span class="token operator">:</span> <span class="token punctuation">(</span>err<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> err
        <span class="token punctuation">}</span>
    <span class="token comment">// \u94FE\u5F0F\u8C03\u7528\uFF0C\u9700\u8981\u8FD4\u56DE\u4E00\u4E2Apromise</span>
    <span class="token keyword">const</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6210\u529F\u72B6\u6001</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">FUFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5931\u8D25\u72B6\u6001</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u7B49\u5F85\u72B6\u6001</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onResolvedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">const</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> promise2
  <span class="token punctuation">}</span>

  <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9ED8\u8BA4\u6CA1\u6709\u6210\u529F \u53EA\u6709\u5931\u8D25</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token function">resolve</span> <span class="token punctuation">(</span>val<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token function">reject</span> <span class="token punctuation">(</span>reason<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5931\u8D25\u7684promise</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token builtin">Promise</span></span><span class="token punctuation">(</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// promise\u7684\u6D4B\u8BD5\u65B9\u6CD5</span>
<span class="token comment">// Promise.defer = Promise.deferred = () =&gt; {</span>
<span class="token comment">//   const dfd = {};</span>
<span class="token comment">//   dfd.promise = new Promise((resolve, reject) =&gt; {</span>
<span class="token comment">//     dfd.resolve = resolve;</span>
<span class="token comment">//     dfd.reject = reject;</span>
<span class="token comment">//   });</span>
<span class="token comment">//   return dfd;</span>
<span class="token comment">// };</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token builtin">Promise</span>
</code></pre></div><h2 id="\u597D\u6587" tabindex="-1">\u597D\u6587 <a class="header-anchor" href="#\u597D\u6587" aria-hidden="true">#</a></h2><ul><li><p>[\u9762\u8BD5] <a href="https://bitable.feishu.cn/app8Ok6k9qafpMkgyRbfgxeEnet?from=logout&amp;table=tblEnSV2PNAajtWE&amp;view=vewJHSwJVd" target="_blank" rel="noopener noreferrer">\u524D\u7AEF\u9762\u8BD5\u771F\u9898\uFF0C\u4F1A80%\u76F4\u63A5\u8FDB\u5927\u5382</a></p></li><li><p>[\u7B97\u6CD5] <a href="https://labuladong.gitee.io/algo/" target="_blank" rel="noopener noreferrer">labuladong \u7684\u7B97\u6CD5\u5C0F\u6284</a></p></li><li><p><a href="https://github.com/azl397985856/leetcode" target="_blank" rel="noopener noreferrer">LeetCode\u5B66\u4E60</a></p></li><li><p><a href="https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/" target="_blank" rel="noopener noreferrer">\u529B\u6263\u52A0\u52A0</a></p></li><li><p><a href="https://codetop.cc/home" target="_blank" rel="noopener noreferrer">CodeTop</a></p></li><li><p><a href="https://juejin.cn/post/6844903897610321934" target="_blank" rel="noopener noreferrer">if \u6211\u662F\u524D\u7AEF\u56E2\u961F Leader\uFF0C\u600E\u4E48\u5236\u5B9A\u524D\u7AEF\u534F\u4F5C\u89C4\u8303</a></p></li><li><p><a href="https://juejin.cn/post/6844903683411410951" target="_blank" rel="noopener noreferrer">\u524D\u7AEF\u5E38\u7528\u63D2\u4EF6\u3001\u5DE5\u5177\u7C7B\u5E93\u6C47\u603B</a></p></li><li><p><a href="https://notes.fe-mm.com/" target="_blank" rel="noopener noreferrer">\u8302\u8302\u7269\u8BED</a></p></li><li><p><a href="https://docschina.org/" target="_blank" rel="noopener noreferrer">\u5370\u8BB0\u4E2D\u6587</a></p></li><li><p><a href="https://jkchao.github.io/typescript-book-chinese/" target="_blank" rel="noopener noreferrer">\u6DF1\u5165\u7406\u89E3Typescript</a></p></li><li><p><a href="https://llccing.github.io/vue-learn-share/" target="_blank" rel="noopener noreferrer">vue-cli\u6E90\u7801\u89E3\u6790</a></p></li><li><p><a href="https://diy4869.github.io/vue-next-analysis/" target="_blank" rel="noopener noreferrer">vue3\u6E90\u7801\u5206\u6790</a></p></li><li><p><a href="https://react.iamkasong.com/me.html" target="_blank" rel="noopener noreferrer">react\u6280\u672F\u63ED\u79D8</a></p></li><li><p><a href="https://tech.meituan.com/" target="_blank" rel="noopener noreferrer">\u7F8E\u56E2\u6280\u672F\u56E2\u961F</a></p></li><li><p><a href="https://github.com/jamiebuilds/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md" target="_blank" rel="noopener noreferrer">babel\u7528\u6237\u624B\u518C</a></p></li><li><p><a href="https://github.com/theanarkh/understand-nodejs" target="_blank" rel="noopener noreferrer">nodejs\u6E90\u7801\u89E3\u6790</a></p></li></ul><h2 id="node\u76F8\u5173" tabindex="-1">Node\u76F8\u5173 <a class="header-anchor" href="#node\u76F8\u5173" aria-hidden="true">#</a></h2>`,106),e=[o];function c(l,u,k,i,r,d){return a(),s("div",null,e)}var f=n(p,[["render",c]]);export{y as __pageData,f as default};
