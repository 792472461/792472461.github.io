import{_ as n,c as s,o as a,a as t}from"./app.5e13693d.js";const y='{"title":"\u524D\u7AEF\u9762\u8BD5\u6C47\u603B","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u57FA\u7840\u9898","slug":"\u57FA\u7840\u9898"},{"level":3,"title":"script\u6807\u7B7E\u5C5E\u6027","slug":"script\u6807\u7B7E\u5C5E\u6027"},{"level":3,"title":"\u9884\u52A0\u8F7D\u8D44\u6E90","slug":"\u9884\u52A0\u8F7D\u8D44\u6E90"},{"level":2,"title":"\u8FDB\u9636\u9898","slug":"\u8FDB\u9636\u9898"},{"level":3,"title":"\u624B\u5199Promise\u51FD\u6570","slug":"\u624B\u5199promise\u51FD\u6570"}],"relativePath":"interview/index.md","lastUpdated":1638365471512}',p={},o=t(`<h1 id="\u524D\u7AEF\u9762\u8BD5\u6C47\u603B" tabindex="-1">\u524D\u7AEF\u9762\u8BD5\u6C47\u603B <a class="header-anchor" href="#\u524D\u7AEF\u9762\u8BD5\u6C47\u603B" aria-hidden="true">#</a></h1><h2 id="\u57FA\u7840\u9898" tabindex="-1">\u57FA\u7840\u9898 <a class="header-anchor" href="#\u57FA\u7840\u9898" aria-hidden="true">#</a></h2><h3 id="script\u6807\u7B7E\u5C5E\u6027" tabindex="-1">script\u6807\u7B7E\u5C5E\u6027 <a class="header-anchor" href="#script\u6807\u7B7E\u5C5E\u6027" aria-hidden="true">#</a></h3><ul><li>async\uFF1A\u53EF\u9009\u3002\u8868\u793A\u5E94\u8BE5\u7ACB\u5373\u5F00\u59CB\u4E0B\u8F7D\u811A\u672C\uFF0C\u4F46\u4E0D\u80FD\u963B\u6B62\u5176\u4ED6\u9875\u9762\u52A8\u4F5C\uFF0C\u6BD4\u5982\u4E0B\u8F7D\u8D44\u6E90\u6216\u7B49\u5F85\u5176\u4ED6\u811A\u672C\u52A0\u8F7D\u3002\u53EA\u5BF9\u5916\u90E8\u811A\u672C\u6587\u4EF6\u6709\u6548\u3002</li><li>charset\uFF1A\u53EF\u9009\u3002\u4F7F\u7528 src \u5C5E\u6027\u6307\u5B9A\u7684\u4EE3\u7801\u5B57\u7B26\u96C6\u3002\u8FD9\u4E2A\u5C5E\u6027\u5F88\u5C11\u4F7F\u7528\uFF0C\u56E0\u4E3A\u5927\u591A\u6570\u6D4F\u89C8\u5668\u4E0D\u5728\u4E4E\u5B83\u7684\u503C\u3002</li><li>crossorigin\uFF1A\u53EF\u9009\u3002\u914D\u7F6E\u76F8\u5173\u8BF7\u6C42\u7684CORS\uFF08\u8DE8\u6E90\u8D44\u6E90\u5171\u4EAB\uFF09\u8BBE\u7F6E\u3002\u9ED8\u8BA4\u4E0D\u4F7F\u7528CORS\u3002crossorigin=&quot;anonymous&quot;\u914D\u7F6E\u6587\u4EF6\u8BF7\u6C42\u4E0D\u5FC5\u8BBE\u7F6E\u51ED\u636E\u6807\u5FD7\u3002crossorigin=&quot;use-credentials&quot;\u8BBE\u7F6E\u51ED\u636E\u6807\u5FD7\uFF0C\u610F\u5473\u7740\u51FA\u7AD9\u8BF7\u6C42\u4F1A\u5305\u542B\u51ED\u636E\u3002</li><li>defer\uFF1A\u53EF\u9009\u3002\u8868\u793A\u811A\u672C\u53EF\u4EE5\u5EF6\u8FDF\u5230\u6587\u6863\u5B8C\u5168\u88AB\u89E3\u6790\u548C\u663E\u793A\u4E4B\u540E\u518D\u6267\u884C\u3002\u53EA\u5BF9\u5916\u90E8\u811A\u672C\u6587\u4EF6\u6709\u6548\u3002\u5728 IE7 \u53CA\u66F4\u65E9\u7684\u7248\u672C\u4E2D\uFF0C\u5BF9\u884C\u5185\u811A\u672C\u4E5F\u53EF\u4EE5\u6307\u5B9A\u8FD9\u4E2A\u5C5E\u6027\u3002</li><li>integrity\uFF1A\u53EF\u9009\u3002\u5141\u8BB8\u6BD4\u5BF9\u63A5\u6536\u5230\u7684\u8D44\u6E90\u548C\u6307\u5B9A\u7684\u52A0\u5BC6\u7B7E\u540D\u4EE5\u9A8C\u8BC1\u5B50\u8D44\u6E90\u5B8C\u6574\u6027\uFF08SRI\uFF0CSubresource Integrity\uFF09\u3002\u5982\u679C\u63A5\u6536\u5230\u7684\u8D44\u6E90\u7684\u7B7E\u540D\u4E0E\u8FD9\u4E2A\u5C5E\u6027\u6307\u5B9A\u7684\u7B7E\u540D\u4E0D\u5339\u914D\uFF0C\u5219\u9875\u9762\u4F1A\u62A5\u9519\uFF0C\u811A\u672C\u4E0D\u4F1A\u6267\u884C\u3002\u8FD9\u4E2A\u5C5E\u6027\u53EF\u4EE5\u7528\u4E8E\u786E\u4FDD\u5185\u5BB9\u5206\u53D1\u7F51\u7EDC\uFF08CDN\uFF0CContent Delivery Network\uFF09\u4E0D\u4F1A\u63D0\u4F9B\u6076\u610F\u5185\u5BB9\u3002</li><li>src\uFF1A\u53EF\u9009\u3002\u8868\u793A\u5305\u542B\u8981\u6267\u884C\u7684\u4EE3\u7801\u7684\u5916\u90E8\u6587\u4EF6\u3002</li><li>type\uFF1A\u53EF\u9009\u3002\u4EE3\u66FF language\uFF0C\u8868\u793A\u4EE3\u7801\u5757\u4E2D\u811A\u672C\u8BED\u8A00\u7684\u5185\u5BB9\u7C7B\u578B\uFF08\u4E5F\u79F0 MIME \u7C7B\u578B\uFF09\u3002\u6309\u7167\u60EF\u4F8B\uFF0C\u8FD9\u4E2A\u503C\u59CB\u7EC8\u90FD\u662F&quot;text/javascript&quot;\uFF0C\u5C3D\u7BA1&quot;text/javascript&quot;\u548C&quot;text/ecmascript&quot;\u90FD\u5DF2\u7ECF\u5E9F\u5F03\u4E86\u3002JavaScript \u6587\u4EF6\u7684 MIME \u7C7B\u578B\u901A\u5E38\u662F&quot;application/x-javascript&quot;\uFF0C\u4E0D\u8FC7\u7ED9type \u5C5E\u6027\u8FD9\u4E2A\u503C\u6709\u53EF\u80FD\u5BFC\u81F4\u811A\u672C\u88AB\u5FFD\u7565\u3002\u5728\u975E IE \u7684\u6D4F\u89C8\u5668\u4E2D\u6709\u6548\u7684\u5176\u4ED6\u503C\u8FD8\u6709&quot;application/javascript&quot;\u548C&quot;application/ecmascript&quot;\u3002\u5982\u679C\u8FD9\u4E2A\u503C\u662F module\uFF0C\u5219\u4EE3\u7801\u4F1A\u88AB\u5F53\u6210 ES6 \u6A21\u5757\uFF0C\u800C\u4E14\u53EA\u6709\u8FD9\u65F6\u5019\u4EE3\u7801\u4E2D\u624D\u80FD\u51FA\u73B0 import \u548C export \u5173\u952E\u5B57\u3002</li></ul><div class="warning custom-block"><p class="custom-block-title">\u6CE8\u610F</p><ol><li>defer \u548C async \u5728\u7F51\u7EDC\u8BFB\u53D6\uFF08\u4E0B\u8F7D\uFF09\u8FD9\u5757\u513F\u662F\u4E00\u6837\u7684\uFF0C\u90FD\u662F\u5F02\u6B65\u7684\uFF08\u76F8\u8F83\u4E8E HTML \u89E3\u6790\uFF09</li><li>\u5B83\u4FE9\u7684\u5DEE\u522B\u5728\u4E8E\u811A\u672C\u4E0B\u8F7D\u5B8C\u4E4B\u540E\u4F55\u65F6\u6267\u884C\uFF0C\u663E\u7136 defer \u662F\u6700\u63A5\u8FD1\u6211\u4EEC\u5BF9\u4E8E\u5E94\u7528\u811A\u672C\u52A0\u8F7D\u548C\u6267\u884C\u7684\u8981\u6C42\u7684</li><li>\u5173\u4E8E defer\uFF0C\u6B64\u56FE\u672A\u5C3D\u4E4B\u5904\u5728\u4E8E\u5B83\u662F\u6309\u7167\u52A0\u8F7D\u987A\u5E8F\u6267\u884C\u811A\u672C\u7684\uFF0C\u8FD9\u4E00\u70B9\u8981\u5584\u52A0\u5229\u7528</li><li>async \u7684\u811A\u672C\u5E76\u4E0D\u4FDD\u8BC1\u80FD\u6309\u7167\u5B83\u4EEC\u51FA\u73B0\u7684\u6B21\u5E8F\u6267\u884C\uFF0Casync \u5C5E\u6027\u7684\u76EE\u7684\u662F\u544A\u8BC9\u6D4F\u89C8\u5668\uFF0C\u4E0D\u5FC5\u7B49\u811A\u672C\u4E0B\u8F7D\u548C\u6267\u884C\u5B8C\u540E\u518D\u52A0\u8F7D\u9875\u9762\uFF0C\u540C\u6837\u4E5F\u4E0D\u5FC5\u7B49\u5230\u8BE5\u5F02\u6B65\u811A\u672C\u4E0B\u8F7D\u548C\u6267\u884C\u540E\u518D\u52A0\u8F7D\u5176\u4ED6\u811A\u672C\u3002\u6B63\u56E0\u4E3A\u5982\u6B64\uFF0C\u5F02\u6B65\u811A\u672C\u4E0D\u5E94\u8BE5\u5728\u52A0\u8F7D\u671F\u95F4\u4FEE\u6539 DOM\u3002\u5F02\u6B65\u811A\u672C\u4FDD\u8BC1\u4F1A\u5728\u9875\u9762\u7684 load \u4E8B\u4EF6\u524D\u6267\u884C\uFF0C\u4F46\u53EF\u80FD\u4F1A\u5728 DOMContentLoaded\uFF08\u53C2\u89C1\u7B2C 17 \u7AE0\uFF09\u4E4B\u524D\u6216\u4E4B\u540E</li><li>\u4ED4\u7EC6\u60F3\u60F3\uFF0Casync \u5BF9\u4E8E\u5E94\u7528\u811A\u672C\u7684\u7528\u5904\u4E0D\u5927\uFF0C\u56E0\u4E3A\u5B83\u5B8C\u5168\u4E0D\u8003\u8651\u4F9D\u8D56\uFF08\u54EA\u6015\u662F\u6700\u4F4E\u7EA7\u7684\u987A\u5E8F\u6267\u884C\uFF09\uFF0C\u4E0D\u8FC7\u5B83\u5BF9\u4E8E\u90A3\u4E9B\u53EF\u4EE5\u4E0D\u4F9D\u8D56\u4EFB\u4F55\u811A\u672C\u6216\u4E0D\u88AB\u4EFB\u4F55\u811A\u672C\u4F9D\u8D56\u7684\u811A\u672C\u6765\u8BF4\u5374\u662F\u975E\u5E38\u5408\u9002\u7684\uFF0C\u6700\u5178\u578B\u7684\u4F8B\u5B50\uFF1AGoogle Analytics</li></ol></div><h3 id="\u9884\u52A0\u8F7D\u8D44\u6E90" tabindex="-1">\u9884\u52A0\u8F7D\u8D44\u6E90 <a class="header-anchor" href="#\u9884\u52A0\u8F7D\u8D44\u6E90" aria-hidden="true">#</a></h3><h2 id="\u8FDB\u9636\u9898" tabindex="-1">\u8FDB\u9636\u9898 <a class="header-anchor" href="#\u8FDB\u9636\u9898" aria-hidden="true">#</a></h2><h3 id="\u624B\u5199promise\u51FD\u6570" tabindex="-1">\u624B\u5199Promise\u51FD\u6570 <a class="header-anchor" href="#\u624B\u5199promise\u51FD\u6570" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token comment">// promise\u7684\u4E09\u79CD\u72B6\u6001\u503C</span>
<span class="token keyword">const</span> <span class="token constant">STATUS</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">PENDING</span><span class="token operator">:</span> <span class="token string">&quot;PENDING&quot;</span><span class="token punctuation">,</span>
  <span class="token constant">FUFILLED</span><span class="token operator">:</span> <span class="token string">&quot;FUFILLED&quot;</span><span class="token punctuation">,</span>
  <span class="token constant">REJECTED</span><span class="token operator">:</span> <span class="token string">&quot;REJECTED&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">isPromise</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token keyword">typeof</span> obj<span class="token punctuation">.</span>then <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token comment">// \u5904\u7406\u8FD4\u56DEpromise\u60C5\u51B5</span>
<span class="token keyword">function</span> <span class="token function">resolvePromise</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// If promise and x refer to the same object, reject promise with a TypeError as the reason.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> promise2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5224\u65AD\u662F\u5426promise</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> called<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> then <span class="token operator">=</span> x<span class="token punctuation">.</span>then<span class="token punctuation">;</span>
      <span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u5982\u679C\u91C7\u7528isPromise\uFF0C\u6D4B\u8BD5\u8FC7\u4E0D\u53BB</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> then <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">then</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
          x<span class="token punctuation">,</span>
          <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token comment">// \u9012\u5F52\u89E3\u6790</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u666E\u901A\u503C</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Promise</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>onResolvedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u6210\u529F\u56DE\u8C03</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5931\u8D25\u56DE\u8C03</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u662Fpromise \u5C31\u7EE7\u7EED\u9012\u5F52\u89E3\u6790</span>
        <span class="token keyword">return</span> val<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">FUFILLED</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> val<span class="token punctuation">;</span>
        <span class="token comment">// \u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\uFF0C\u5F02\u6B65</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onResolvedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason<span class="token punctuation">;</span>
        <span class="token comment">// \u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\uFF0C\u5F02\u6B65</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">onFulfilled<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7ED9\u5B9A\u4E00\u4E2A\u9ED8\u8BA4\u65B9\u6CD5</span>
    onFulfilled <span class="token operator">=</span> <span class="token keyword">typeof</span> onFulfilled <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> <span class="token function-variable function">onFulfilled</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span>
    onRejected <span class="token operator">=</span>
      <span class="token keyword">typeof</span> onRejected <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span>
        <span class="token operator">?</span> <span class="token function-variable function">onRejected</span>
        <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u94FE\u5F0F\u8C03\u7528\uFF0C\u9700\u8981\u8FD4\u56DE\u4E00\u4E2Apromise</span>
    <span class="token keyword">let</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6210\u529F\u72B6\u6001</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">FUFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5931\u8D25\u72B6\u6001</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u7B49\u5F85\u72B6\u6001</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onResolvedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> promise2<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">catch</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9ED8\u8BA4\u6CA1\u6709\u6210\u529F \u53EA\u6709\u5931\u8D25</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">static</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5931\u8D25\u7684promise</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// promise\u7684\u6D4B\u8BD5\u65B9\u6CD5</span>
Promise<span class="token punctuation">.</span>defer <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function-variable function">deferred</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> dfd <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  dfd<span class="token punctuation">.</span>promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    dfd<span class="token punctuation">.</span>resolve <span class="token operator">=</span> resolve<span class="token punctuation">;</span>
    dfd<span class="token punctuation">.</span>reject <span class="token operator">=</span> reject<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> dfd<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Promise<span class="token punctuation">;</span>
</code></pre></div>`,9),c=[o];function e(u,l,k,i,r,d){return a(),s("div",null,c)}var f=n(p,[["render",e]]);export{y as __pageData,f as default};
