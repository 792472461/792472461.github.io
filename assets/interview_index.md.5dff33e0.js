import{_ as n,c as s,o as a,d as t}from"./app.7e9cfa17.js";const y='{"title":"\u524D\u7AEF\u9762\u8BD5\u6C47\u603B","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u57FA\u7840\u9898","slug":"\u57FA\u7840\u9898"},{"level":3,"title":"script\u6807\u7B7E\u5C5E\u6027","slug":"script\u6807\u7B7E\u5C5E\u6027"},{"level":3,"title":"\u6D45\u62F7\u8D1D\u3001\u6DF1\u62F7\u8D1D","slug":"\u6D45\u62F7\u8D1D\u3001\u6DF1\u62F7\u8D1D"},{"level":3,"title":"\u6D4F\u89C8\u5668\u4E2D\u7684\u8FDB\u7A0B","slug":"\u6D4F\u89C8\u5668\u4E2D\u7684\u8FDB\u7A0B"},{"level":3,"title":"\u6E32\u67D3\u8FDB\u7A0B\uFF08\u5305\u542B\u7740\u591A\u4E2A\u7EBF\u7A0B\uFF09","slug":"\u6E32\u67D3\u8FDB\u7A0B\uFF08\u5305\u542B\u7740\u591A\u4E2A\u7EBF\u7A0B\uFF09"},{"level":3,"title":"\u5B8F\u4EFB\u52A1|\u5FAE\u4EFB\u52A1","slug":"\u5B8F\u4EFB\u52A1-\u5FAE\u4EFB\u52A1"},{"level":2,"title":"\u8FDB\u9636\u9898","slug":"\u8FDB\u9636\u9898"},{"level":3,"title":"\u624B\u5199\u6DF1\u5408\u5E76","slug":"\u624B\u5199\u6DF1\u5408\u5E76"},{"level":3,"title":"Promise.finally\u539F\u7406","slug":"promise-finally\u539F\u7406"},{"level":3,"title":"Promise.race\u539F\u7406","slug":"promise-race\u539F\u7406"},{"level":3,"title":"promisify\u539F\u7406","slug":"promisify\u539F\u7406"},{"level":3,"title":"\u624B\u5199Promise\u51FD\u6570","slug":"\u624B\u5199promise\u51FD\u6570"},{"level":2,"title":"\u597D\u6587","slug":"\u597D\u6587"},{"level":2,"title":"Node\u76F8\u5173","slug":"node\u76F8\u5173"},{"level":3,"title":"\u6267\u884C\u4E00\u4E2Anodejs\u6587\u4EF6\u662F\u4E00\u8FDB\u7A0B\u8FD8\u662F\u7EBF\u7A0B","slug":"\u6267\u884C\u4E00\u4E2Anodejs\u6587\u4EF6\u662F\u4E00\u8FDB\u7A0B\u8FD8\u662F\u7EBF\u7A0B"}],"relativePath":"interview/index.md","lastUpdated":1643192424859}',p={},o=t(`<h1 id="\u524D\u7AEF\u9762\u8BD5\u6C47\u603B" tabindex="-1">\u524D\u7AEF\u9762\u8BD5\u6C47\u603B <a class="header-anchor" href="#\u524D\u7AEF\u9762\u8BD5\u6C47\u603B" aria-hidden="true">#</a></h1><h2 id="\u57FA\u7840\u9898" tabindex="-1">\u57FA\u7840\u9898 <a class="header-anchor" href="#\u57FA\u7840\u9898" aria-hidden="true">#</a></h2><h3 id="script\u6807\u7B7E\u5C5E\u6027" tabindex="-1">script\u6807\u7B7E\u5C5E\u6027 <a class="header-anchor" href="#script\u6807\u7B7E\u5C5E\u6027" aria-hidden="true">#</a></h3><ul><li>async\uFF1A\u53EF\u9009\u3002\u8868\u793A\u5E94\u8BE5\u7ACB\u5373\u5F00\u59CB\u4E0B\u8F7D\u811A\u672C\uFF0C\u4F46\u4E0D\u80FD\u963B\u6B62\u5176\u4ED6\u9875\u9762\u52A8\u4F5C\uFF0C\u6BD4\u5982\u4E0B\u8F7D\u8D44\u6E90\u6216\u7B49\u5F85\u5176\u4ED6\u811A\u672C\u52A0\u8F7D\u3002\u53EA\u5BF9\u5916\u90E8\u811A\u672C\u6587\u4EF6\u6709\u6548\u3002</li><li>charset\uFF1A\u53EF\u9009\u3002\u4F7F\u7528 src \u5C5E\u6027\u6307\u5B9A\u7684\u4EE3\u7801\u5B57\u7B26\u96C6\u3002\u8FD9\u4E2A\u5C5E\u6027\u5F88\u5C11\u4F7F\u7528\uFF0C\u56E0\u4E3A\u5927\u591A\u6570\u6D4F\u89C8\u5668\u4E0D\u5728\u4E4E\u5B83\u7684\u503C\u3002</li><li>crossorigin\uFF1A\u53EF\u9009\u3002\u914D\u7F6E\u76F8\u5173\u8BF7\u6C42\u7684CORS\uFF08\u8DE8\u6E90\u8D44\u6E90\u5171\u4EAB\uFF09\u8BBE\u7F6E\u3002\u9ED8\u8BA4\u4E0D\u4F7F\u7528CORS\u3002crossorigin=&quot;anonymous&quot;\u914D\u7F6E\u6587\u4EF6\u8BF7\u6C42\u4E0D\u5FC5\u8BBE\u7F6E\u51ED\u636E\u6807\u5FD7\u3002crossorigin=&quot;use-credentials&quot; \u8BBE\u7F6E\u51ED\u636E\u6807\u5FD7\uFF0C\u610F\u5473\u7740\u51FA\u7AD9\u8BF7\u6C42\u4F1A\u5305\u542B\u51ED\u636E\u3002</li><li>defer\uFF1A\u53EF\u9009\u3002\u8868\u793A\u811A\u672C\u53EF\u4EE5\u5EF6\u8FDF\u5230\u6587\u6863\u5B8C\u5168\u88AB\u89E3\u6790\u548C\u663E\u793A\u4E4B\u540E\u518D\u6267\u884C\u3002\u53EA\u5BF9\u5916\u90E8\u811A\u672C\u6587\u4EF6\u6709\u6548\u3002\u5728 IE7 \u53CA\u66F4\u65E9\u7684\u7248\u672C\u4E2D\uFF0C\u5BF9\u884C\u5185\u811A\u672C\u4E5F\u53EF\u4EE5\u6307\u5B9A\u8FD9\u4E2A\u5C5E\u6027\u3002</li><li>integrity\uFF1A\u53EF\u9009\u3002\u5141\u8BB8\u6BD4\u5BF9\u63A5\u6536\u5230\u7684\u8D44\u6E90\u548C\u6307\u5B9A\u7684\u52A0\u5BC6\u7B7E\u540D\u4EE5\u9A8C\u8BC1\u5B50\u8D44\u6E90\u5B8C\u6574\u6027\uFF08SRI\uFF0CSubresource Integrity\uFF09\u3002\u5982\u679C\u63A5\u6536\u5230\u7684\u8D44\u6E90\u7684\u7B7E\u540D\u4E0E\u8FD9\u4E2A\u5C5E\u6027\u6307\u5B9A\u7684\u7B7E\u540D\u4E0D\u5339\u914D\uFF0C\u5219\u9875\u9762\u4F1A\u62A5\u9519\uFF0C\u811A\u672C\u4E0D\u4F1A\u6267\u884C\u3002\u8FD9\u4E2A\u5C5E\u6027\u53EF\u4EE5\u7528\u4E8E\u786E\u4FDD\u5185\u5BB9\u5206\u53D1\u7F51\u7EDC\uFF08CDN\uFF0CContent Delivery Network\uFF09\u4E0D\u4F1A\u63D0\u4F9B\u6076\u610F\u5185\u5BB9\u3002</li><li>src\uFF1A\u53EF\u9009\u3002\u8868\u793A\u5305\u542B\u8981\u6267\u884C\u7684\u4EE3\u7801\u7684\u5916\u90E8\u6587\u4EF6\u3002</li><li>type\uFF1A\u53EF\u9009\u3002\u4EE3\u66FF language\uFF0C\u8868\u793A\u4EE3\u7801\u5757\u4E2D\u811A\u672C\u8BED\u8A00\u7684\u5185\u5BB9\u7C7B\u578B\uFF08\u4E5F\u79F0 MIME \u7C7B\u578B\uFF09\u3002\u6309\u7167\u60EF\u4F8B\uFF0C\u8FD9\u4E2A\u503C\u59CB\u7EC8\u90FD\u662F&quot;text/javascript&quot;\uFF0C\u5C3D\u7BA1&quot;text/javascript&quot;\u548C&quot;text/ecmascript&quot; \u90FD\u5DF2\u7ECF\u5E9F\u5F03\u4E86\u3002JavaScript \u6587\u4EF6\u7684 MIME \u7C7B\u578B\u901A\u5E38\u662F&quot;application/x-javascript&quot;\uFF0C\u4E0D\u8FC7\u7ED9type \u5C5E\u6027\u8FD9\u4E2A\u503C\u6709\u53EF\u80FD\u5BFC\u81F4\u811A\u672C\u88AB\u5FFD\u7565\u3002\u5728\u975E IE \u7684\u6D4F\u89C8\u5668\u4E2D\u6709\u6548\u7684\u5176\u4ED6\u503C\u8FD8\u6709&quot; application/javascript&quot;\u548C&quot;application/ecmascript&quot;\u3002\u5982\u679C\u8FD9\u4E2A\u503C\u662F module\uFF0C\u5219\u4EE3\u7801\u4F1A\u88AB\u5F53\u6210 ES6 \u6A21\u5757\uFF0C\u800C\u4E14\u53EA\u6709\u8FD9\u65F6\u5019\u4EE3\u7801\u4E2D\u624D\u80FD\u51FA\u73B0 import \u548C export \u5173\u952E\u5B57\u3002</li></ul><div class="warning custom-block"><p class="custom-block-title">\u6CE8\u610F</p><ol><li>defer \u548C async \u5728\u7F51\u7EDC\u8BFB\u53D6\uFF08\u4E0B\u8F7D\uFF09\u8FD9\u5757\u513F\u662F\u4E00\u6837\u7684\uFF0C\u90FD\u662F\u5F02\u6B65\u7684\uFF08\u76F8\u8F83\u4E8E HTML \u89E3\u6790\uFF09</li><li>\u5B83\u4FE9\u7684\u5DEE\u522B\u5728\u4E8E\u811A\u672C\u4E0B\u8F7D\u5B8C\u4E4B\u540E\u4F55\u65F6\u6267\u884C\uFF0C\u663E\u7136 defer \u662F\u6700\u63A5\u8FD1\u6211\u4EEC\u5BF9\u4E8E\u5E94\u7528\u811A\u672C\u52A0\u8F7D\u548C\u6267\u884C\u7684\u8981\u6C42\u7684</li><li>\u5173\u4E8E defer\uFF0C\u6B64\u56FE\u672A\u5C3D\u4E4B\u5904\u5728\u4E8E\u5B83\u662F\u6309\u7167\u52A0\u8F7D\u987A\u5E8F\u6267\u884C\u811A\u672C\u7684\uFF0C\u8FD9\u4E00\u70B9\u8981\u5584\u52A0\u5229\u7528</li><li>async \u7684\u811A\u672C\u5E76\u4E0D\u4FDD\u8BC1\u80FD\u6309\u7167\u5B83\u4EEC\u51FA\u73B0\u7684\u6B21\u5E8F\u6267\u884C\uFF0Casync \u5C5E\u6027\u7684\u76EE\u7684\u662F\u544A\u8BC9\u6D4F\u89C8\u5668\uFF0C\u4E0D\u5FC5\u7B49\u811A\u672C\u4E0B\u8F7D\u548C\u6267\u884C\u5B8C\u540E\u518D\u52A0\u8F7D\u9875\u9762\uFF0C\u540C\u6837\u4E5F\u4E0D\u5FC5\u7B49\u5230\u8BE5\u5F02\u6B65\u811A\u672C\u4E0B\u8F7D\u548C\u6267\u884C\u540E\u518D\u52A0\u8F7D\u5176\u4ED6\u811A\u672C\u3002\u6B63\u56E0\u4E3A\u5982\u6B64\uFF0C\u5F02\u6B65\u811A\u672C\u4E0D\u5E94\u8BE5\u5728\u52A0\u8F7D\u671F\u95F4\u4FEE\u6539 DOM\u3002\u5F02\u6B65\u811A\u672C\u4FDD\u8BC1\u4F1A\u5728\u9875\u9762\u7684 load \u4E8B\u4EF6\u524D\u6267\u884C\uFF0C\u4F46\u53EF\u80FD\u4F1A\u5728 DOMContentLoaded\uFF08\u53C2\u89C1\u7B2C 17 \u7AE0\uFF09\u4E4B\u524D\u6216\u4E4B\u540E</li><li>\u4ED4\u7EC6\u60F3\u60F3\uFF0Casync \u5BF9\u4E8E\u5E94\u7528\u811A\u672C\u7684\u7528\u5904\u4E0D\u5927\uFF0C\u56E0\u4E3A\u5B83\u5B8C\u5168\u4E0D\u8003\u8651\u4F9D\u8D56\uFF08\u54EA\u6015\u662F\u6700\u4F4E\u7EA7\u7684\u987A\u5E8F\u6267\u884C\uFF09\uFF0C\u4E0D\u8FC7\u5B83\u5BF9\u90A3\u4E9B\u53EF\u4EE5\u4E0D\u4F9D\u8D56\u4EFB\u4F55\u811A\u672C\u6216\u4E0D\u88AB\u4EFB\u4F55\u811A\u672C\u4F9D\u8D56\u7684\u811A\u672C\u6765\u8BF4\u5374\u662F\u975E\u5E38\u5408\u9002\u7684\uFF0C\u6700\u5178\u578B\u7684\u4F8B\u5B50\uFF1AGoogle Analytics</li></ol></div><h3 id="\u6D45\u62F7\u8D1D\u3001\u6DF1\u62F7\u8D1D" tabindex="-1">\u6D45\u62F7\u8D1D\u3001\u6DF1\u62F7\u8D1D <a class="header-anchor" href="#\u6D45\u62F7\u8D1D\u3001\u6DF1\u62F7\u8D1D" aria-hidden="true">#</a></h3><p>JavaScript\u4E2D\u5BF9\u8C61\u662F\u5F15\u7528\u7C7B\u578B\uFF0C\u4FDD\u5B58\u7684\u662F\u5730\u5740\uFF0C\u6DF1\u3001\u6D45\u62F7\u8D1D\u7684\u533A\u522B\u662F\uFF0C\u5F53\u62F7\u8D1D\u7ED3\u675F\u540E\uFF0C\u5728\u4E00\u5B9A\u7A0B\u5EA6\u4E0A\u6539\u53D8\u539F\u5BF9\u8C61\u4E2D\u7684\u67D0\u4E00\u4E2A\u5F15\u7528\u7C7B\u578B\u5C5E\u6027\u7684\u503C\uFF0C\u65B0\u62F7\u8D1D\u51FA\u6765\u7684\u5BF9\u8C61\u4F9D\u7136\u53D7\u5F71\u54CD\u7684\u8BDD\uFF0C\u5C31\u662F\u6D45\u62F7\u8D1D\uFF0C\u53CD\u4E4B\u5C31\u662F\u6DF1\u62F7\u8D1D\u3002</p><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">deepClone</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">function</span> <span class="token function">isObject</span> <span class="token punctuation">(</span><span class="token parameter">o</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> o <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> o <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> o <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isObject</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u975E\u5BF9\u8C61&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">var</span> isArray <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> newObj <span class="token operator">=</span> isArray <span class="token operator">?</span> <span class="token punctuation">[</span><span class="token operator">...</span>obj<span class="token punctuation">]</span> <span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token operator">...</span>obj <span class="token punctuation">}</span><span class="token punctuation">;</span>
  Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>newObj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">isObject</span><span class="token punctuation">(</span>newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token function">deepClone</span><span class="token punctuation">(</span>newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">:</span> newObj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> newObj<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;AAA&#39;</span><span class="token punctuation">,</span>
  age<span class="token operator">:</span> <span class="token number">23</span><span class="token punctuation">,</span>
  job<span class="token operator">:</span> <span class="token punctuation">{</span>
    name<span class="token operator">:</span> <span class="token string">&#39;FE&#39;</span><span class="token punctuation">,</span>
    money<span class="token operator">:</span> <span class="token number">12000</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="\u6D4F\u89C8\u5668\u4E2D\u7684\u8FDB\u7A0B" tabindex="-1">\u6D4F\u89C8\u5668\u4E2D\u7684\u8FDB\u7A0B <a class="header-anchor" href="#\u6D4F\u89C8\u5668\u4E2D\u7684\u8FDB\u7A0B" aria-hidden="true">#</a></h3><ol><li>\u6D4F\u89C8\u5668\u8FDB\u7A0B\uFF1A\u8D1F\u8D23\u754C\u9762\u663E\u793A\u3001\u7528\u6237\u4EA4\u4E92\u3001\u5B50\u8FDB\u7A0B\u7BA1\u7406\uFF0C\u63D0\u4F9B\u5B58\u50A8\u7B49\u3002</li><li>\u6E32\u67D3\u8FDB\u7A0B\uFF1A\u6BCF\u4E2A\u4E5F\u5361\u90FD\u6709\u5355\u72EC\u7684\u6E32\u67D3\u8FDB\u7A0B\uFF0C\u6838\u5FC3\u7528\u4E8E\u6E32\u67D3\u9875\u9762\u3002</li><li>\u7F51\u7EDC\u8FDB\u7A0B\uFF1A\u4E3B\u8981\u5904\u7406\u7F51\u7EDC\u8D44\u6E90\u52A0\u8F7D(HTML\u3001CSS,\u3001JS\u7B49)</li><li>GPU\u8FDB\u7A0B\uFF1A3d\u7ED8\u5236,\u63D0\u9AD8\u6027\u80FD</li><li>\u63D2\u4EF6\u8FDB\u7A0B\uFF1A chrome\u4E2D\u5B89\u88C5\u7684\u4E00\u4E9B\u63D2\u4EF6</li></ol><h3 id="\u6E32\u67D3\u8FDB\u7A0B\uFF08\u5305\u542B\u7740\u591A\u4E2A\u7EBF\u7A0B\uFF09" tabindex="-1">\u6E32\u67D3\u8FDB\u7A0B\uFF08\u5305\u542B\u7740\u591A\u4E2A\u7EBF\u7A0B\uFF09 <a class="header-anchor" href="#\u6E32\u67D3\u8FDB\u7A0B\uFF08\u5305\u542B\u7740\u591A\u4E2A\u7EBF\u7A0B\uFF09" aria-hidden="true">#</a></h3><ol><li>GUI\u6E32\u67D3\u7EBF\u7A0B \uFF08\u6E32\u67D3\u9875\u9762\u7684\uFF09</li><li>js\u5F15\u64CE\u7EBF\u7A0B \u4ED6\u548C\u9875\u9762\u6E32\u67D3\u65F6\u4E92\u65A5</li><li>\u4E8B\u4EF6\u89E6\u53D1\u7EBF\u7A0B \u72EC\u7ACB\u7684\u7EBF\u7A0B EventLoop</li><li>\u4E8B\u4EF6 click\u3001setTimeout\u3001ajax\u4E5F\u662F\u4E00\u4E2A\u72EC\u7ACB\u7EBF\u7A0B \u5FAE\u4EFB\u52A1\u961F\u5217\u6BCF\u6B21\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A\u5168\u65B0\u7684\u961F\u5217\u3001\u4E8B\u4EF6\u961F\u5217\u4EC5\u6709\u4E00\u4E2A(\u5FAE\u4EFB\u52A1\u961F\u5217\u6BCF\u6B21\u90FD\u4F1A\u521B\u5EFA\u4E00\u4E2A\u5168\u65B0\u7684\u961F\u5217\u3001\u4E8B\u4EF6\u961F\u5217\u4EC5\u6709\u4E00\u4E2A)</li><li>\u4E8B\u4EF6\u961F\u5217\u3001\u6D88\u606F\u961F\u5217\uFF1A\u5B58\u653E\u5B9A\u65F6\u5668\u5230\u8FBE\u65F6\u95F4\u7684\u56DE\u8C03\u51FD\u6570\u3001ajax\u56DE\u8C03\u6210\u529F\u7684\u51FD\u6570\u7B49</li><li>\u4E8B\u4EF6\u5FAA\u73AF\uFF1A\u4E0D\u65AD\u68C0\u6D4B\u8C03\u7528\u6808\u662F\u5426\u4E3A\u7A7A\uFF0C\u5982\u679C\u4E3A\u7A7A\u5219\u4ECE\u4E8B\u4EF6\u5BF9\u5217\u4E2D\u53D6\u51FA\u4E00\u4E2A\u6765\u6267\u884C</li></ol><h3 id="\u5B8F\u4EFB\u52A1-\u5FAE\u4EFB\u52A1" tabindex="-1">\u5B8F\u4EFB\u52A1|\u5FAE\u4EFB\u52A1 <a class="header-anchor" href="#\u5B8F\u4EFB\u52A1-\u5FAE\u4EFB\u52A1" aria-hidden="true">#</a></h3><ol><li>\u5B8F\u4EFB\u52A1script ui \u6E32\u67D3\u3001setTimeout\u3001setInterval\u3001postMessage\u3001MessageChannel\u3001SetImmediate</li><li>\u5FAE\u4EFB\u52A1promise mutationObserver\u3001process.nextTick</li></ol><div class="tip custom-block"><p class="custom-block-title">\u63D0\u793A</p><p>\u6BCF\u5FAA\u73AF\u4E00\u6B21\u4F1A\u6267\u884C\u4E00\u4E2A\u5B8F\u4EFB\u52A1\uFF0C\u5E76\u6E05\u7A7A\u5BF9\u5E94\u7684\u5FAE\u4EFB\u52A1\u961F\u5217\uFF0C\u6BCF\u6B21\u4E8B\u4EF6\u5FAA\u73AF\u5B8C\u6BD5\u540E\u4F1A\u5224\u65AD\u9875\u9762\u662F\u5426\u9700\u8981\u91CD\u65B0\u6E32\u67D3 \uFF08\u5927\u7EA616.6ms\u4F1A\u6E32\u67D3\u4E00\u6B21\uFF09</p></div><h2 id="\u8FDB\u9636\u9898" tabindex="-1">\u8FDB\u9636\u9898 <a class="header-anchor" href="#\u8FDB\u9636\u9898" aria-hidden="true">#</a></h2><h3 id="\u624B\u5199\u6DF1\u5408\u5E76" tabindex="-1">\u624B\u5199\u6DF1\u5408\u5E76 <a class="header-anchor" href="#\u624B\u5199\u6DF1\u5408\u5E76" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">deepMergeObject</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> rest <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> a<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      rest<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">deepMerge</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">,</span> b<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      rest<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> b
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">deepMergeArray</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">deepMerge</span> <span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>a <span class="token operator">||</span> <span class="token operator">!</span>b<span class="token punctuation">)</span> <span class="token keyword">return</span> a <span class="token operator">||</span> b
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> a <span class="token operator">!==</span> <span class="token keyword">typeof</span> b<span class="token punctuation">)</span> <span class="token keyword">return</span> b
  <span class="token keyword">if</span> <span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">deepMergeArray</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> a <span class="token operator">===</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> b
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> a <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">deepMergeObject</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">)</span>
  <span class="token keyword">return</span> b
<span class="token punctuation">}</span>

</code></pre></div><h3 id="promise-finally\u539F\u7406" tabindex="-1">Promise.finally\u539F\u7406 <a class="header-anchor" href="#promise-finally\u539F\u7406" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token class-name">Promise</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">finally</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">callback</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u8BA9\u51FD\u6570\u6267\u884C \u5185\u90E8\u4F1A\u8C03\u7528\u65B9\u6CD5\uFF0C\u5982\u679C\u65B9\u6CD5\u662Fpromise\u9700\u8981\u7B49\u5F85\u4ED6\u5B8C\u6210</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token parameter">err</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token function">callback</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> err
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="promise-race\u539F\u7406" tabindex="-1">Promise.race\u539F\u7406 <a class="header-anchor" href="#promise-race\u539F\u7406" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code>Promise<span class="token punctuation">.</span><span class="token function-variable function">race</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">promises</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> promises<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> currentVal <span class="token operator">=</span> promises<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>currentVal <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> currentVal<span class="token punctuation">.</span>then <span class="token operator">==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        currentVal<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>currentVal<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="promisify\u539F\u7406" tabindex="-1">promisify\u539F\u7406 <a class="header-anchor" href="#promisify\u539F\u7406" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token keyword">function</span> <span class="token function">promisify</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">fn</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> read <span class="token operator">=</span> <span class="token function">promisify</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span>readFile<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="\u624B\u5199promise\u51FD\u6570" tabindex="-1">\u624B\u5199Promise\u51FD\u6570 <a class="header-anchor" href="#\u624B\u5199promise\u51FD\u6570" aria-hidden="true">#</a></h3><div class="language-javascript"><pre><code><span class="token comment">// promise\u7684\u4E09\u79CD\u72B6\u6001\u503C</span>
<span class="token keyword">const</span> <span class="token constant">STATUS</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">PENDING</span><span class="token operator">:</span> <span class="token string">&quot;PENDING&quot;</span><span class="token punctuation">,</span>
  <span class="token constant">FUFILLED</span><span class="token operator">:</span> <span class="token string">&quot;FUFILLED&quot;</span><span class="token punctuation">,</span>
  <span class="token constant">REJECTED</span><span class="token operator">:</span> <span class="token string">&quot;REJECTED&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">isPromise</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> obj <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    <span class="token keyword">typeof</span> obj<span class="token punctuation">.</span>then <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token comment">// \u5904\u7406\u8FD4\u56DEpromise\u60C5\u51B5</span>
<span class="token keyword">function</span> <span class="token function">resolvePromise</span> <span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// If promise and x refer to the same object, reject promise with a TypeError as the reason.</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>x <span class="token operator">===</span> promise2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// \u5224\u65AD\u662F\u5426promise</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;object&quot;</span> <span class="token operator">&amp;&amp;</span> x <span class="token operator">!==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token keyword">typeof</span> x <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> called<span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> then <span class="token operator">=</span> x<span class="token punctuation">.</span>then<span class="token punctuation">;</span>
      <span class="token comment">// \u8FD9\u4E2A\u5730\u65B9\u5982\u679C\u91C7\u7528isPromise\uFF0C\u6D4B\u8BD5\u8FC7\u4E0D\u53BB</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> then <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">then</span><span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>
          x<span class="token punctuation">,</span>
          <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">y</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token comment">// \u9012\u5F52\u89E3\u6790</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">r</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
            called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>r<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
        <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>called<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
      called <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u666E\u901A\u503C</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">Promise</span> <span class="token punctuation">{</span>
  <span class="token function">constructor</span> <span class="token punctuation">(</span><span class="token parameter">executor</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> <span class="token keyword">undefined</span><span class="token punctuation">;</span>

    <span class="token keyword">this</span><span class="token punctuation">.</span>onResolvedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u6210\u529F\u56DE\u8C03</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// \u5931\u8D25\u56DE\u8C03</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">;</span>

    <span class="token keyword">const</span> <span class="token function-variable function">resolve</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>val <span class="token keyword">instanceof</span> <span class="token class-name">Promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u662Fpromise \u5C31\u7EE7\u7EED\u9012\u5F52\u89E3\u6790</span>
        <span class="token keyword">return</span> val<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>

      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">FUFILLED</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>value <span class="token operator">=</span> val<span class="token punctuation">;</span>
        <span class="token comment">// \u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\uFF0C\u5F02\u6B65</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onResolvedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> <span class="token function-variable function">reject</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>reason <span class="token operator">=</span> reason<span class="token punctuation">;</span>
        <span class="token comment">// \u53D1\u5E03\u8BA2\u9605\u6A21\u5F0F\uFF0C\u5F02\u6B65</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
      <span class="token function">executor</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token function">then</span> <span class="token punctuation">(</span><span class="token parameter">onFulfilled<span class="token punctuation">,</span> onRejected</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u7ED9\u5B9A\u4E00\u4E2A\u9ED8\u8BA4\u65B9\u6CD5</span>
    onFulfilled <span class="token operator">=</span> <span class="token keyword">typeof</span> onFulfilled <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span> <span class="token operator">?</span> <span class="token function-variable function">onFulfilled</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> x<span class="token punctuation">;</span>
    onRejected <span class="token operator">=</span>
      <span class="token keyword">typeof</span> onRejected <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span>
        <span class="token operator">?</span> <span class="token function-variable function">onRejected</span>
        <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u94FE\u5F0F\u8C03\u7528\uFF0C\u9700\u8981\u8FD4\u56DE\u4E00\u4E2Apromise</span>
    <span class="token keyword">let</span> promise2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u6210\u529F\u72B6\u6001</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">FUFILLED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u5931\u8D25\u72B6\u6001</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">REJECTED</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token keyword">try</span> <span class="token punctuation">{</span>
            <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
      <span class="token comment">// \u7B49\u5F85\u72B6\u6001</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token constant">STATUS</span><span class="token punctuation">.</span><span class="token constant">PENDING</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onResolvedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onFulfilled</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">this</span><span class="token punctuation">.</span>onRejectedCallbacks<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
          <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
              <span class="token keyword">let</span> x <span class="token operator">=</span> <span class="token function">onRejected</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
              <span class="token function">resolvePromise</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> promise2<span class="token punctuation">,</span> resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">return</span> promise2<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u9ED8\u8BA4\u6CA1\u6709\u6210\u529F \u53EA\u6709\u5931\u8D25</span>
    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token function">resolve</span> <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">static</span> <span class="token function">reject</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5931\u8D25\u7684promise</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// promise\u7684\u6D4B\u8BD5\u65B9\u6CD5</span>
Promise<span class="token punctuation">.</span>defer <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function-variable function">deferred</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> dfd <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
  dfd<span class="token punctuation">.</span>promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    dfd<span class="token punctuation">.</span>resolve <span class="token operator">=</span> resolve<span class="token punctuation">;</span>
    dfd<span class="token punctuation">.</span>reject <span class="token operator">=</span> reject<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> dfd<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

module<span class="token punctuation">.</span>exports <span class="token operator">=</span> Promise<span class="token punctuation">;</span>
</code></pre></div><h2 id="\u597D\u6587" tabindex="-1">\u597D\u6587 <a class="header-anchor" href="#\u597D\u6587" aria-hidden="true">#</a></h2><ul><li><p>[\u9762\u8BD5] <a href="https://bitable.feishu.cn/app8Ok6k9qafpMkgyRbfgxeEnet?from=logout&amp;table=tblEnSV2PNAajtWE&amp;view=vewJHSwJVd" target="_blank" rel="noopener noreferrer">\u524D\u7AEF\u9762\u8BD5\u771F\u9898\uFF0C\u4F1A80%\u76F4\u63A5\u8FDB\u5927\u5382</a></p></li><li><p>[\u7B97\u6CD5] <a href="https://labuladong.gitee.io/algo/" target="_blank" rel="noopener noreferrer">labuladong \u7684\u7B97\u6CD5\u5C0F\u6284</a></p></li><li><p><a href="https://github.com/azl397985856/leetcode" target="_blank" rel="noopener noreferrer">LeetCode\u5B66\u4E60</a></p></li><li><p><a href="https://leetcode-solution-leetcode-pp.gitbook.io/leetcode-solution/" target="_blank" rel="noopener noreferrer">\u529B\u6263\u52A0\u52A0</a></p></li><li><p><a href="https://codetop.cc/home" target="_blank" rel="noopener noreferrer">CodeTop</a></p></li><li><p><a href="https://juejin.cn/post/6844903897610321934" target="_blank" rel="noopener noreferrer">if \u6211\u662F\u524D\u7AEF\u56E2\u961F Leader\uFF0C\u600E\u4E48\u5236\u5B9A\u524D\u7AEF\u534F\u4F5C\u89C4\u8303</a></p></li><li><p><a href="https://juejin.cn/post/6844903683411410951" target="_blank" rel="noopener noreferrer">\u524D\u7AEF\u5E38\u7528\u63D2\u4EF6\u3001\u5DE5\u5177\u7C7B\u5E93\u6C47\u603B</a></p></li><li><p><a href="https://notes.fe-mm.com/" target="_blank" rel="noopener noreferrer">\u8302\u8302\u7269\u8BED</a></p></li><li><p><a href="https://docschina.org/" target="_blank" rel="noopener noreferrer">\u5370\u8BB0\u4E2D\u6587</a></p></li><li><p><a href="https://jkchao.github.io/typescript-book-chinese/" target="_blank" rel="noopener noreferrer">\u6DF1\u5165\u7406\u89E3Typescript</a></p></li><li><p><a href="https://llccing.github.io/vue-learn-share/" target="_blank" rel="noopener noreferrer">vue-cli\u6E90\u7801\u89E3\u6790</a></p></li><li><p><a href="https://diy4869.github.io/vue-next-analysis/" target="_blank" rel="noopener noreferrer">vue3\u6E90\u7801\u5206\u6790</a></p></li><li><p><a href="https://react.iamkasong.com/me.html" target="_blank" rel="noopener noreferrer">react\u6280\u672F\u63ED\u79D8</a></p></li><li><p><a href="https://tech.meituan.com/" target="_blank" rel="noopener noreferrer">\u7F8E\u56E2\u6280\u672F\u56E2\u961F</a></p></li><li><p><a href="https://github.com/jamiebuilds/babel-handbook/blob/master/translations/zh-Hans/user-handbook.md" target="_blank" rel="noopener noreferrer">babel\u7528\u6237\u624B\u518C</a></p></li><li><p><a href="https://github.com/theanarkh/understand-nodejs" target="_blank" rel="noopener noreferrer">nodejs\u6E90\u7801\u89E3\u6790</a></p></li></ul><h2 id="node\u76F8\u5173" tabindex="-1">Node\u76F8\u5173 <a class="header-anchor" href="#node\u76F8\u5173" aria-hidden="true">#</a></h2><h3 id="\u6267\u884C\u4E00\u4E2Anodejs\u6587\u4EF6\u662F\u4E00\u8FDB\u7A0B\u8FD8\u662F\u7EBF\u7A0B" tabindex="-1">\u6267\u884C\u4E00\u4E2Anodejs\u6587\u4EF6\u662F\u4E00\u8FDB\u7A0B\u8FD8\u662F\u7EBF\u7A0B <a class="header-anchor" href="#\u6267\u884C\u4E00\u4E2Anodejs\u6587\u4EF6\u662F\u4E00\u8FDB\u7A0B\u8FD8\u662F\u7EBF\u7A0B" aria-hidden="true">#</a></h3><ul><li>\u8FDB\u7A0B\u662F\u5E94\u7528\u7A0B\u5E8F\u7684\u6267\u884C\u526F\u672C\u3002\uFF08OS\u5206\u914D\u8D44\u6E90\u7684\u6700\u5C0F\u5355\u4F4D\uFF09</li><li>\u7EBF\u7A0B\u662F\u8F7B\u91CF\u7EA7\u7684\u8FDB\u7A0B\u3002\uFF08OS\u6267\u884C\u7A0B\u5E8F\u7684\u6700\u5C0F\u5355\u4F4D\uFF09</li></ul>`,31),e=[o];function c(u,l,k,i,r,d){return a(),s("div",null,e)}var m=n(p,[["render",c]]);export{y as __pageData,m as default};
